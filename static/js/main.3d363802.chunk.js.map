{"version":3,"sources":["components/common/mockdata.js","components/login/login2.js","components/layout/appbar.js","components/dashboard/dashboard.js","components/voteObjectives/voteGradersMenu.js","components/voteObjectives/voteDialog.js","components/voteObjectives/voteObjectivesTable.js","components/voteObjectives/employee.js","components/voteObjectives/employeeSelectList.js","components/voteObjectives/voteContainer.js","components/watchObjectives/employeeSelectListWatch.js","components/watchObjectives/watchDialog.js","components/watchObjectives/objectivesTableWatch.js","components/watchObjectives/watchContainer.js","components/setObjectives/setObjectivesTable.js","components/setObjectives/setObjectivesSelectEmployee.js","components/setObjectives/setObjectivesAddObjForm.js","components/setObjectives/setObjectivesEditObjForm.js","components/setObjectives/setObjectivesAddObjDialog.js","components/setObjectives/snackbar.js","components/setObjectives/setObjectivesContainer.js","components/setUsers/setUsersContainer.js","components/profile/profileContainer.js","components/users/usersContainer.js","components/settings/settingsContainer.js","components/layout/toolbar.js","components/layout/drawer2.js","App.js","serviceWorker.js","index.js","logo-tr.png"],"names":["user","id","name","surname","role","department","gender","objectives","title","year","reportDate","reportHour","totalObjectiveScore","creatorID","objectiveList","createdDate","objectiveType","objectiveKind","description","period","credit","target","unit","lowerLimit","upperLimit","graderList","grade","gradetDate","objectiveCoefficient","oldGraderList","objectiveScore","accessibleUserList","Copyright","Typography","variant","color","align","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","height","width","border","avatar","margin","backgroundColor","form","submit","marginBottom","logo","pointerEvents","container","SignIn","props","classes","React","useState","pass","setUser","username","setUsername","password","setPassword","useTheme","mat","useMediaQuery","breakpoints","down","handleEnterPress","e","key","postCredentials","mdata","map","item","index","console","log","localStorage","setItem","JSON","stringify","checkAutanticated","Container","component","maxWidth","className","CssBaseline","Paper","src","alt","Avatar","noValidate","TextField","required","fullWidth","label","autoComplete","autoFocus","onChange","event","value","onKeyPress","type","Button","onClick","disabled","paragraph","Box","mt","grow","flexGrow","appbar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","up","search","position","borderRadius","shape","fade","palette","common","white","searchIcon","justifyContent","inputRoot","inputInput","padding","sectionDesktop","sectionMobile","Dashboard","Grid","xs","style","StyledMenu","withStyles","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","root","MenuItem","SimpleMenu","anchorEl","setAnchorEl","handleClose","aria-controls","aria-haspopup","currentTarget","endIcon","keepMounted","open","Boolean","onClose","length","button","Transition","forwardRef","ref","Slide","direction","dialogOpenButton","voteTextField","dialog","okButton","cancelButton","AlertDialogSlide","setOpen","isValidInput","setIsValidInput","inputGrade","setInputGrade","gradeObjFromServer","employee","filter","i","size","undefined","Dialog","TransitionComponent","aria-labelledby","aria-describedby","transitionDuration","DialogTitle","DialogContent","dividers","DialogContentText","error","helperText","DialogActions","handleVoteClick","columns","minWidth","format","toLocaleString","toFixed","voteButton","tableBodyRows","outline","StickyHeadTable","page","setPage","rowsPerPage","setRowsPerPage","rows","index0","index1","nameSurname","targetSection","targetType","targetSort","weight","targetValue","minLimit","maxLimit","push","saveGrade","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","TableBody","slice","row","tabIndex","IconButton","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","labelRowsPerPage","Employee","result","Object","keys","selectedEmployee","List","ListItem","dense","divider","ListItemText","Divider","orientation","formControl","selectEmpty","formControlSelect","inputLabel","menuItem","menuItemNone","SimpleSelect","useEffect","FormControl","InputLabel","htmlFor","Select","labelId","handleSelectEmployee","FormHelperText","UsersObjectives","setSelectedEmployee","setEmployee","getEmployeeInfo","justify","overflow","overFlowX","overflowX","objIndex","graderListObj","tablePagination","ObjectivesTableWatch","Watch","SetObjectivesTable","employeeWithObjYear","employeeProp","yearProp","j","square","selected","selectedIndex","float","handleSelectObjective","SetObjectivesSelectEmployee","select","ListItemIcon","primary","secondary","topGrid","fabButton","top","left","right","yearEnum","freeze","_2020","typeEnum","is","kisisel","kindEnum","hata","devam","verim","maliyet","surec","iyiles","teslim","yardim","periodEnum","gun","ay","ucay","altiay","dokuzay","yil","unitEnum","yuzde","adam","adet","bulgu","dakika","hafta","kere","saat","tl","puan","SetObjectivesForm","yearInput","setYearInput","objTypeInput","setObjTypeInput","objKindInput","setObjKindInput","descriptionInput","setDescriptionInput","periodInput","setPeriodInput","unitInput","setUnitInput","creditInput","setCreditInput","targetInput","setTargetInput","minInput","setMinInput","maxInput","setMaxInput","newObjective","initNewObjective","topGrid1","borderRight","multiline","editButtons","EditObjectivesForm","selectedObjective","objective","updatedObjective","minHeight","handleCloseEditButton","fontSize","root1","ButtonGroup","startIcon","updateObjective","evet","reason","handleCloseDialog","isUserAsEmployee","saveObjective","Alert","CustomizedSnackbars","message","Snackbar","autoHideDuration","onExit","onExitFromSnackbar","severity","icon","speedDial","bottom","CssTextField","borderColor","StyledSpeedDial","SpeedDial","actionsOfSpeedDial","SetObjectivesContainer","selectedObjectiveYear","setSelectedObjectiveYear","setIsUserAsEmployee","isEditObjectiveOpen","setIsEditObjectiveOpen","isAddObjectiveOpen","setIsAddObjectiveOpen","setSelectedObjective","snackBarState","setSnackBarState","hidden","handleObjectiveAddButton","deleteObjective","pop","renderYearForm","inputProps","ariaLabel","SpeedDialIcon","onOpen","FabProps","action","SpeedDialAction","tooltipTitle","actionType","operationType","SetUsersContainer","ProfileContainer","UsersContainer","SettingsContainer","Toolbar1","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","renderMobileMenu","Badge","badgeContent","Toolbar","handleDrawerOpen","edge","clsx","noWrap","appBar","flexShrink","whiteSpace","drawerOpen","drawerClose","toolbar","mixins","content","papers","notSelected","MiniDrawer","isOpenDashboard","setIsOpenDashboard","isOpenVoteObjectives","setIsOpenVoteObjectives","isOpenWatchObjectives","setIsOpenWatchObjectives","isOpenSetObjectives","setIsOpenSetObjectives","isOpenSetUsers","isOpenProfile","isOpenUsers","isOpenSettings","prevView","setPrevView","handleView","newView","AppBar","Drawer","handleLogout","renderDashboard","renderVoteObjectives","renderWatchObjectives","renderSetObjectives","renderSetUsers","renderProfile","renderUsers","renderSettings","App","getItem","axios","defaults","headers","parse","userObj","clear","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.3d363802.chunk.js","sourcesContent":["const user = [\n    {\n        id: \"selman\",\n        name: \"Selman\",\n        surname: \"Bey\",\n        role: \"ROLE_GENELMUDUR\",\n        department: \"S0000\",\n        gender: \"MAlE\",\n        objectives: [\n            {\n                title: \"TUSAŞ-TÜRK HAVACILIK VE UZAY SAN.A.Ş İNSAN KAYNAKLARI BAŞKANLIĞI PERSONEL HEDEF RAPORU\",\n                year: \"2020\",\n                reportDate: \"22.APRIL.2020\",\n                reportHour: \"00.00\",\n                totalObjectiveScore: -1,\n                creatorID: \"\",\n                objectiveList: [\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                ],\n            }\n        ],\n        accessibleUserList: [\n            {\n                id: \"taha\",\n                name: \"Taha\",\n                surname: \"Bey\",\n                role: \"ROLE_DIREKTOR\",\n                department: \"S1000\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            },\n            {\n                id: \"uğur\",\n                name: \"Uğur Melih\",\n                surname: \"Bey\",\n                role: \"ROLE_MUDUR\",\n                department: \"S2200\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            },\n            {\n                id: \"necdet\",\n                name: \"Necdet Engin\",\n                surname: \"Bey\",\n                role: \"ROLE_SEF\",\n                department: \"S2230\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            },\n            {\n                id: \"göksu\",\n                name: \"Göksu\",\n                surname: \"Hanım\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2230\",\n                gender: \"FEMALE\",\n                objectiveCoefficient: 1\n            },\n\n            {\n                id: \"çağrı\",\n                name: \"Çağrı Zeki\",\n                surname: \"Bey\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2220\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            },\n            {\n                id: \"ahmet\",\n                name: \"Ahmet\",\n                surname: \"Bey\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2230\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            },\n            {\n                id: \"mehmet\",\n                name: \"Mehmet\",\n                surname: \"Bey\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2230\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            }\n\n        ]\n\n\n    },\n    {\n        id: \"taha\",\n        name: \"Taha\",\n        surname: \"Bey\",\n        role: \"ROLE_DIREKTOR\",\n        department: \"S1000\",\n        gender: \"MAlE\",\n        objectives: [\n            {\n                title: \"TUSAŞ-TÜRK HAVACILIK VE UZAY SAN.A.Ş İNSAN KAYNAKLARI BAŞKANLIĞI PERSONEL HEDEF RAPORU\",\n                year: \"2020\",\n                reportDate: \"22.APRIL.2020\",\n                reportHour: \"00.00\",\n                totalObjectiveScore: -1,\n                creatorID: \"\",\n                objectiveList: [\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                ],\n            }\n        ],\n        accessibleUserList: [\n            {\n                id: \"uğur\",\n                name: \"Uğur Melih\",\n                surname: \"Bey\",\n                role: \"ROLE_MUDUR\",\n                department: \"S2200\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            },\n            {\n                id: \"necdet\",\n                name: \"Necdet Engin\",\n                surname: \"Bey\",\n                role: \"ROLE_SEF\",\n                department: \"S2230\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            },\n            {\n                id: \"göksu\",\n                name: \"Göksu\",\n                surname: \"Hanım\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2230\",\n                gender: \"FEMALE\",\n                objectiveCoefficient: 1\n            },\n\n            {\n                id: \"çağrı\",\n                name: \"Çağrı Zeki\",\n                surname: \"Bey\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2220\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            },\n            {\n                id: \"ahmet\",\n                name: \"Ahmet\",\n                surname: \"Bey\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2230\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            },\n            {\n                id: \"mehmet\",\n                name: \"Mehmet\",\n                surname: \"Bey\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2230\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            }\n\n        ]\n\n\n    },\n    {\n        id: \"uğur\",\n        name: \"Uğur Melih\",\n        surname: \"Bey\",\n        role: \"ROLE_MUDUR\",\n        department: \"S2200\",\n        gender: \"MAlE\",\n        objectives: [\n            {\n                title: \"TUSAŞ-TÜRK HAVACILIK VE UZAY SAN.A.Ş İNSAN KAYNAKLARI BAŞKANLIĞI PERSONEL HEDEF RAPORU\",\n                year: \"2020\",\n                reportDate: \"22.APRIL.2020\",\n                reportHour: \"00.00\",\n                totalObjectiveScore: -1,\n                creatorID: \"\",\n                objectiveList: [\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    }\n                ],\n            }\n        ],\n        accessibleUserList: [\n            {\n                id: \"necdet\",\n                name: \"Necdet Engin\",\n                surname: \"Bey\",\n                role: \"ROLE_SEF\",\n                department: \"S2230\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            },\n            {\n                id: \"göksu\",\n                name: \"Göksu\",\n                surname: \"Hanım\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2230\",\n                gender: \"FEMALE\",\n                objectiveCoefficient: 1\n            },\n\n            {\n                id: \"çağrı\",\n                name: \"Çağrı Zeki\",\n                surname: \"Bey\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2220\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            },\n            {\n                id: \"ahmet\",\n                name: \"Ahmet\",\n                surname: \"Bey\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2230\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            },\n            {\n                id: \"mehmet\",\n                name: \"Mehmet\",\n                surname: \"Bey\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2230\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            }\n\n        ]\n\n\n    },\n\n    {\n        id: \"necdet\",\n        name: \"Necdet Engin\",\n        surname: \"Bey\",\n        role: \"ROLE_SEF\",\n        department: \"S2230\",\n        gender: \"MAlE\",\n        objectives: [\n            {\n                title: \"TUSAŞ-TÜRK HAVACILIK VE UZAY SAN.A.Ş İNSAN KAYNAKLARI BAŞKANLIĞI PERSONEL HEDEF RAPORU\",\n                year: \"2020\",\n                reportDate: \"22.APRIL.2020\",\n                reportHour: \"00.00\",\n                totalObjectiveScore: -1,\n                creatorID: \"\",\n                objectiveList: [\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    }\n                ],\n            }\n        ],\n        accessibleUserList: [\n            {\n                id: \"göksu\",\n                name: \"Göksu\",\n                surname: \"Hanım\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2230\",\n                gender: \"FEMALE\",\n                objectiveCoefficient: 1\n            },\n\n            {\n                id: \"çağrı\",\n                name: \"Çağrı Zeki\",\n                surname: \"Bey\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2220\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            },\n            {\n                id: \"ahmet\",\n                name: \"Ahmet\",\n                surname: \"Bey\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2230\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            },\n            {\n                id: \"mehmet\",\n                name: \"Mehmet\",\n                surname: \"Bey\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2230\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            }\n\n        ]\n    },\n    {\n        id: \"göksu\",\n        name: \"Göksu\",\n        surname: \"Hanım\",\n        role: \"ROLE_PERSONEL\",\n        department: \"S2230\",\n        gender: \"MAlE\",\n        objectives: [\n            {\n                title: \"TUSAŞ-TÜRK HAVACILIK VE UZAY SAN.A.Ş İNSAN KAYNAKLARI BAŞKANLIĞI PERSONEL HEDEF RAPORU\",\n                year: \"2020\",\n                reportDate: \"22.APRIL.2020\",\n                reportHour: \"00.00\",\n                totalObjectiveScore: -1,\n                creatorID: \"\",\n                objectiveList: [\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    }\n                ],\n            }\n        ],\n        accessibleUserList: [\n            {\n                id: \"ahmet\",\n                name: \"Ahmet\",\n                surname: \"Bey\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2230\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            },\n            {\n                id: \"mehmet\",\n                name: \"Mehmet\",\n                surname: \"Bey\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2230\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            }\n\n        ]\n    },\n    {\n        id: \"çağrı\",\n        name: \"Çağrı Zeki\",\n        surname: \"Bey\",\n        role: \"ROLE_PERSONEL\",\n        department: \"S2220\",\n        gender: \"MAlE\",\n        objectives: [\n            {\n                title: \"TUSAŞ-TÜRK HAVACILIK VE UZAY SAN.A.Ş İNSAN KAYNAKLARI BAŞKANLIĞI PERSONEL HEDEF RAPORU\",\n                year: \"2020\",\n                reportDate: \"22.APRIL.2020\",\n                reportHour: \"00.00\",\n                totalObjectiveScore: -1,\n                creatorID: \"\",\n                objectiveList: [\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    }\n                ],\n            }\n        ],\n        accessibleUserList: [\n            {\n                id: \"ahmet\",\n                name: \"Ahmet\",\n                surname: \"Bey\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2230\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            },\n            {\n                id: \"mehmet\",\n                name: \"Mehmet\",\n                surname: \"Bey\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2230\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            }\n\n        ]\n    },\n    {\n        id: \"ahmet\",\n        name: \"Ahmet\",\n        surname: \"Bey\",\n        role: \"ROLE_PERSONEL\",\n        department: \"S2220\",\n        gender: \"MAlE\",\n        objectives: [\n            {\n                title: \"TUSAŞ-TÜRK HAVACILIK VE UZAY SAN.A.Ş İNSAN KAYNAKLARI BAŞKANLIĞI PERSONEL HEDEF RAPORU\",\n                year: \"2020\",\n                reportDate: \"22.APRIL.2020\",\n                reportHour: \"00.00\",\n                totalObjectiveScore: -1,\n                creatorID: \"\",\n                objectiveList: [\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    }\n                ],\n            }\n        ],\n        accessibleUserList: [\n            {\n                id: \"mehmet\",\n                name: \"Mehmet\",\n                surname: \"Bey\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2230\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            }\n\n        ]\n    },\n    {\n        id: \"mehmet\",\n        name: \"Mehmet\",\n        surname: \"Bey\",\n        role: \"ROLE_PERSONEL\",\n        department: \"S2220\",\n        gender: \"MAlE\",\n        objectives: [\n            {\n                title: \"TUSAŞ-TÜRK HAVACILIK VE UZAY SAN.A.Ş İNSAN KAYNAKLARI BAŞKANLIĞI PERSONEL HEDEF RAPORU\",\n                year: \"2020\",\n                reportDate: \"22.APRIL.2020\",\n                reportHour: \"00.00\",\n                totalObjectiveScore: -1,\n                creatorID: \"\",\n                objectiveList: [\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    },\n                    {\n                        creatorID: \"\",\n                        createdDate: \"\",\n                        objectiveType: \"IS\",\n                        objectiveKind: \"ISSURECLERIDENEYIM\",\n                        description: \"Hedef Açıklaması\",\n                        period: \"YILLIK\",\n                        credit: \"0.1\",\n                        target: \"100\",\n                        unit: \"YUZDE\",\n                        lowerLimit: 100,\n                        upperLimit: 100,\n                        graderList: [\n                            {\n                                id: \"t00000\",\n                                name: \"admin\",\n                                surname: \"admin\",\n                                role: \"admin\",\n                                department: \"administration\",\n                                gender: \"robot\",\n                                grade: 100,\n                                gradetDate: 1587548860134,\n                                objectiveCoefficient: 1\n                            }\n                        ],\n                        oldGraderList: [],\n                        objectiveScore: 10,\n                    }\n                ],\n            }\n        ],\n        accessibleUserList: [\n            {\n                id: \"ahmet\",\n                name: \"Ahmet\",\n                surname: \"Bey\",\n                role: \"ROLE_PERSONEL\",\n                department: \"S2230\",\n                gender: \"MALE\",\n                objectiveCoefficient: 1\n            }\n\n        ]\n    },\n]\n\nexport default user;","import React, { useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport axios from 'axios';\nimport { Paper, useMediaQuery } from '@material-ui/core';\nimport logo from '../../logo-tr.png';\n\nimport mdata from \"../common/mockdata\"\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © TUSAŞ - Uzay Yazılım '}\n\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        height: \"\",\n        width: \"100%\",\n        border: \"2px solid #b71c1c\",\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        //backgroundColor: theme.palette.secondary.main,\n        backgroundColor: \"#b71c1c\",\n    },\n    form: {\n        width: '80%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n        backgroundColor: \"#b71c1c\",\n        '&:hover': {\n            backgroundColor: \"#e53935\",\n        },\n        //marginTop: theme.spacing(5),\n        //marginBottom: theme.spacing(10),\n        marginBottom: 90,\n        /* [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n          } */\n    },\n    logo: {\n        height: \"100%\",\n        width: \"50%\",\n        pointerEvents: \"none\",\n        marginBottom: 50\n    },\n    container: {\n        //backgroundColor: \"red\",\n        //height: \"70vh\"\n        width: \"100%\"\n    }\n}));\n\nexport default function SignIn(props) {\n    const classes = useStyles();\n\n    const [{ user, pass }, setUser] = React.useState({ user: \"1\", pass: \"1\" });\n    const [username, setUsername] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n\n    const [isMobileActive, setIsMobileActive] = React.useState(false)\n\n    const theme = useTheme();\n    const mat = useMediaQuery(theme.breakpoints.down(\"sm\"))\n\n    const handleUserNameChange = (event) => {\n        setUsername(event.target.value)\n    }\n\n    const handlePasswordchange = (event) => {\n        setPassword(event.target.value)\n    }\n\n    const handleClick = () => {\n        setUser({ user: username, pass: password })\n        postCredentials()\n    }\n\n    const handleEnterPress = (e) => {\n        if (e.key === \"Enter\") {\n            setUser({ user: username, pass: password })\n            postCredentials()\n        }\n        return;\n    }\n\n    /* const postCredentials = () => {\n        axios.post(`http://172.25.10.12:8081/auth/login`, { username: username, password: password })\n            .then(res => {\n                if (res.status === 200) {\n                    console.log(\"res.data lol: \", res.data)\n                    axios.defaults.headers.common[\"authorization\"] = \"Bearer \" + res.data.token\n                    localStorage.setItem(\"myToken\", res.data.token)\n                    localStorage.setItem(\"fark\", JSON.stringify(res.data.userDto))\n                    props.checkAutanticated(res.data.userDto)\n                }\n                //this.setState({ persons });\n            })\n    } */\n\n    const postCredentials = () => {\n        mdata.map((item, index) => {\n            console.log(item)\n            if (username === item.id & password === \"123456\") {\n                localStorage.setItem(\"fark\", JSON.stringify(item))\n                props.checkAutanticated(item)\n                return;\n            }\n        })\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\n            <CssBaseline />\n\n\n            <Paper className={classes.paper}>\n                <img src={logo} className={classes.logo} alt=\"logo\" />\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h6\">\n                    Performans Yönetim Sistemi\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Kullanıcı Kimliği\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        onChange={handleUserNameChange}\n                        onKeyPress={event => handleEnterPress(event)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Şifre\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={handlePasswordchange}\n                        onKeyPress={event => handleEnterPress(event)}\n                    />\n                    {/* <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    /> */}\n                    <Button\n                        //type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleClick}\n                        disabled={mat}\n                    >\n                        Giriş Yap\n                    </Button>\n                    {/* <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n                             </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"#\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid> */}\n                    {mat ? <Typography paragraph color=\"error\">Mobilden giriş yapılamaz!</Typography> : \"\"}\n                </form>\n\n            </Paper>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}","import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport clsx from 'clsx';\n\nconst drawerWidth = 180;\n//const drawerWidth = \"14vw\";\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  /* appbar: {\n    //zIndex: theme.zIndex.drawer + 1,\n    width: \"89%\",\n    height: \"8%\",\n    backgroundColor: \"#b71c1c\"\n  }, */\n  appbar: {\n    backgroundColor: \"#b71c1c\",\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    //display: \"flex\",\n    //flexGrow: 1,\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.05),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    //width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(5),\n      //left: '55%',\n      //marginRight: '45%',\n      //width: '30%',\n      \n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = event => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profil</MenuItem>\n      <MenuItem onClick={handleMenuClose}>Hesabım</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appbar, {\n          [classes.appBarShift]: props.open,\n        })}\n      >\n        <Toolbar>\n\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={props.handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              //[classes.hide]: props.open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Performans Yönetim Sistemi\n          </Typography>\n          \n          {/* <div className={classes.search} >\n            <div className={classes.searchIcon} >\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div> */}\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={1} color=\"primary\">\n                <MailIcon />\n              </Badge>\n            </IconButton> */}\n            <IconButton aria-label=\"show 17 new notifications\" style={{ color: \"black\" }}>\n              <Badge badgeContent={1} color=\"primary\" style={{ color: \"black\" }}>\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n              style={{ color: \"black\" }}\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper } from '@material-ui/core'\n\nexport default function Dashboard(props) {\n    return (\n        <div>\n            <Grid container item xs={12} spacing={2} style={{ height: \"100%\", width: \"100%\" }}>\n                {/* <Grid container item xs={12} style={{ height: 500, width: 1000 }}>\n                    <Paper style={{ height: \"100%\", width: \"100%\" }}>\n                        <h1>Dashboard Container</h1>\n                    </Paper>\n                </Grid> */}\n                {/* <Grid container item xs={6} style={{ height: 500, width: 1000 }}>\n                    <Paper style={{ height: \"100%\", width: \"100%\" }}>\n                        <h1>Dashboard Container</h1>\n                    </Paper>\n                </Grid> */}\n            </Grid>\n        </div>\n    )\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport { MenuItem, Typography } from '@material-ui/core';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\nconst StyledMenu = withStyles({\n    paper: {\n      border: '1px solid #d3d4d5',\n    },\n  })(props => (\n    <Menu\n      elevation={0}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'center',\n      }}\n      {...props}\n    />\n  ));\n\n  const StyledMenuItem = withStyles(theme => ({\n    root: {\n      '&:focus': {\n        //backgroundColor: theme.palette.primary.main,\n        backgroundColor: \"black\",\n        color: \"white\",\n        '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n          color: theme.palette.common.white,\n        },\n      },\n    },\n  }))(MenuItem);\n\nexport default function SimpleMenu(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <Button\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                endIcon={<KeyboardArrowDownIcon />}\n            >\n                <Typography align=\"right\" variant=\"caption\">Puan Verenler</Typography>\n            </Button>\n            <StyledMenu\n                id=\"customized-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {props.graderList.length !== 0 ?\n                    props.graderList.map((item, index) => (\n                        <StyledMenuItem button={true} onClick={handleClose} key={index}>\n                            <Typography variant=\"caption\">\n                                {item.name + \" \" + item.surname + \": \" + item.grade}\n                            </Typography>\n                        </StyledMenuItem>\n\n                    ))\n                    :\n                    <MenuItem onClick={handleClose}>\n                        <Typography variant=\"caption\">\n                            Puan Bulunamadı\n                            </Typography>\n                    </MenuItem>\n                }\n            </StyledMenu>\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { Button, TextField, InputAdornment, Input, Typography, Grid, Paper } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport VoteGradersMenu from './voteGradersMenu'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles(theme => ({\n    dialogOpenButton: {\n        color: \"black\",\n        //backgroundColor: \"#b71c1c\",\n        border: \"2px solid grey\"\n\n    },\n    voteTextField: {\n\n    },\n    dialog: {\n        border: \"2px solid black\"\n\n    },\n    okButton: {\n        color: \"black\"\n    },\n    cancelButton: {\n        color: \"black\"\n    },\n\n}));\n\nexport default function AlertDialogSlide(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    //const [grade, setGrade] = React.useState(\"\");\n    const [isValidInput, setIsValidInput] = React.useState(false);\n    const [inputGrade, setInputGrade] = React.useState(\"\");\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleOkButton = () => {\n        //setGrade(inputGrade)       \n        props.handleVoteClick(props.index, inputGrade)\n        setOpen(false);\n        setInputGrade(\"\");\n        setIsValidInput(false)\n\n    };\n\n    const handleClose = () => {\n        //setGrade(\"\");      \n        setInputGrade(\"\")\n        setOpen(false);\n    };\n    //console.log(\"inputgrade: \", inputGrade)\n    const handleVoteChange = (event) => {\n        setInputGrade(event.target.value)\n        if (event.target.value >= 0 & event.target.value <= 100) {\n            setIsValidInput(true)\n        } else {\n            setIsValidInput(false)\n        }\n    }\n\n    const gradeObjFromServer = props.employee.objectives[0].objectiveList[props.index].graderList.filter(i => i.id === props.user.id)[0]\n    console.log(\"props.employee from vote:\", props.employee)\n\n    return (\n        <div>\n            <Button variant=\"outlined\" size=\"small\" onClick={handleClickOpen} className={classes.dialogOpenButton}>\n                Puanla {gradeObjFromServer !== undefined ? gradeObjFromServer.grade : \"-\"}\n                {console.log(gradeObjFromServer !== undefined ? gradeObjFromServer.grade : \"gradeFromServer undefined\")}\n            </Button>\n\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n                //className={classes.dialog}\n                fullWidth\n                transitionDuration={300}\n                \n            >\n                <div className={classes.dialog}>\n                    <Grid container item xs={12}>\n                        <Grid container item xs={6} direction=\"column\">\n\n                            <DialogTitle id=\"alert-dialog-slide-title\">Önceki puanınız: {gradeObjFromServer !== undefined ? gradeObjFromServer.grade : \"-\"}</DialogTitle>\n\n                        </Grid>\n                        <Grid container item xs={6} direction=\"column\">\n\n                            <DialogTitle>\n                                <Typography align=\"right\" variant=\"caption\">\n\n                                <VoteGradersMenu graderList={props.employee.objectives[0].objectiveList[props.index].graderList}/>\n                            </Typography>\n\n                            </DialogTitle>\n\n                        </Grid>\n                    </Grid>\n                    <DialogContent dividers>\n\n                        <DialogContentText id=\"alert-dialog-slide-description\">\n\n\n\n                            <Typography component=\"span\" variant=\"caption\">\n                                Hedef Açıklaması: {props.employee.objectives[0].objectiveList[props.index].description}\n                            </Typography>\n                            <br />\n\n                            <Typography component=\"span\" variant=\"caption\">\n                                Hedef Çeşidi: {props.employee.objectives[0].objectiveList[props.index].objectiveKind}\n                            </Typography>\n                            <br />\n\n                            <Typography component=\"span\" variant=\"caption\">\n                                Periyot: {props.employee.objectives[0].objectiveList[props.index].period}\n                            </Typography>\n                            <br />\n\n                            <Typography component=\"span\" variant=\"caption\">\n                                Hedef Değer: {props.employee.objectives[0].objectiveList[props.index].target}\n                            </Typography>\n                            <br />\n\n                            <Typography component=\"span\" variant=\"caption\">\n                                Ağırlık: {props.employee.objectives[0].objectiveList[props.index].credit}\n                            </Typography>\n                            <br />\n\n                            <Typography component=\"span\" variant=\"caption\">\n                                Birim: {props.employee.objectives[0].objectiveList[props.index].unit}\n                            </Typography>\n\n\n                        </DialogContentText>\n\n                        <TextField\n                            autoFocus\n                            error={!isValidInput}\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Puanınızı Girin\"\n                            type=\"number\"\n                            value={inputGrade}\n                            fullWidth\n                            onChange={handleVoteChange}\n                            helperText=\"Girilen değer 0 ile 100 arasında olmalıdır.\"\n                            className={classes.voteTextField}\n                        />\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button disabled={!isValidInput} onClick={handleOkButton} variant=\"contained\" className={classes.okButton} >\n                            KAYDET\n                    </Button>\n                        <Button onClick={handleClose} variant=\"contained\" className={classes.cancelButton}>\n                            İPTAL\n                    </Button>\n                    </DialogActions>\n\n                </div>\n            </Dialog>\n        </div >\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Button, Typography, TextField, ListItem, Divider, Grid, IconButton, TableFooter } from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport DoneIcon from '@material-ui/icons/Done';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport DragIndicatorRoundedIcon from '@material-ui/icons/DragIndicatorRounded';\nimport MoreVertRoundedIcon from '@material-ui/icons/MoreVertRounded';\n\nimport VoteDialog from \"./voteDialog\"\n\nconst columns = [\n  /* { id: 'buttons', label: '', minWidth: 10, align: 'left' }, */\n  { id: 'vote', label: '', minWidth: 100, align: 'left' },\n\n\n  { id: 'year', label: 'YIL', minWidth: 70, align: 'left' },\n  //{ id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\n  {\n    id: 'id',\n    label: 'SİCİL',\n    //minWidth: 70,\n    align: 'left',\n    format: value => value.toLocaleString(),\n  },\n  {\n    id: 'nameSurname',\n    label: 'ADI\\u00a0SOYADI',\n    //minWidth: 70,\n    align: 'left',\n    format: value => value.toLocaleString(),\n  },\n  {\n    id: 'targetSection',\n    label: 'HEDEF\\u00a0BÖLÜM',\n    //minWidth: 70,\n    align: 'left',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'targetType',\n    label: 'HEDEF\\u00a0TÜRÜ',\n    //minWidth: 70,\n    align: 'left',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'targetSort',\n    label: 'HEDEF\\u00a0ÇEŞİDİ',\n    //minWidth: 70,\n    align: 'left',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'description',\n    label: 'AÇIKLAMA',\n    //minWidth: 70,\n    align: 'left',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'period',\n    label: 'DÖNEM',\n    //minWidth: 70,\n    align: 'left',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'weight',\n    label: 'AĞIRLIK',\n    //minWidth: 70,\n    align: 'left',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'targetValue',\n    label: 'HEDEF\\u00a0DEĞER',\n    //minWidth: 70,\n    align: 'left',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'unit',\n    label: 'BİRİM',\n    //minWidth: 70,\n    align: 'left',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'minLimit',\n    label: 'ALT\\u00a0LİMİT',\n    //minWidth: 70,\n    align: 'left',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'maxLimit',\n    label: 'ÜST\\u00a0LİMİT',\n    //minWidth: 70,\n    align: 'left',\n    format: value => value.toFixed(2),\n  },\n];\n\nfunction createData(year, id, nameSurname, targetSection,\n  targetType, targetSort, description, period, weight,\n  targetValue, unit, minLimit, maxLimit) {\n  //const density = population / size;\n  return {\n    year, id, nameSurname, targetSection,\n    targetType, targetSort, description, period, weight,\n    targetValue, unit, minLimit, maxLimit\n  };\n}\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'grid',\n    width: '100%',\n    height: '100%',\n  },\n  container: {\n    height: \"74vh\",\n    //width: \"70%\"\n  },\n  voteButton: {\n    color: \"black\",\n    //backgroundColor: \"#b71c1c\",\n    border: \"2px solid #ffcdd2\",\n    height: \"40px\",\n\n  },\n  tableBodyRows: {\n    '&:hover': {\n      backgroundColor: \"#e0e0e0\",\n    }\n  },\n  '@global': {\n    '*::-webkit-scrollbar': {\n      width: '0.4em',\n      height: '0.4em',\n    },\n    '*::-webkit-scrollbar-track': {\n      'webkit-box-shadow': 'inset 0 0 6px rgba(255, 255, 255, 1.00)',\n    },\n    '*::-webkit-scrollbar-thumb': {\n      backgroundColor: 'rgba(183, 28, 28, 1.00)',\n      outline: '1px solid slategrey',\n      '-webkit-border-radius': '10px',\n    },\n  }\n});\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  console.log(\"props.employee from vote objective table: \", props.employee)\n\n  const rows = []\n\n  const mafon = () => {\n    if (props.employee !== \"\") {\n      props.employee.objectives.map((i, index0) => i.objectiveList.map((item, index1) => {\n        rows.push(createData(i.year, props.employee.id, props.employee.name + \" \" + props.employee.surname,\n          props.employee.department, item.objectiveType, item.objectiveKind, item.description,\n          item.period, item.credit, item.target, item.unit, item.lowerLimit, item.upperLimit))\n      })\n      )\n    }\n  }\n  mafon()\n\n  const handleVoteClick = (index, grade) => {\n    props.saveGrade(index + \"\", grade, \"2020\")\n\n  }\n\n  return (    \n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth, backgroundColor: \"#b71c1c\", color: \"white\" }}\n                  padding=\"checkbox\"\n                >\n                  <Typography variant=\"subtitle2\">{column.label}</Typography>\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody >\n            {rows !== null ?\n              rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n                return (\n                  <TableRow role=\"checkbox\" tabIndex={-1} key={index} className={classes.tableBodyRows}>\n                    {/* { Object.keys(row).map(item => (\n                      <TableCell>{row[item]}</TableCell>\n                    ))} */}\n                    {columns.map(column => {\n                      const value = row[column.id];\n                      return (\n                        column.id === \"vote\" ?\n                          <TableCell key={column.id} align={column.align}>\n                            <VoteDialog handleVoteClick={handleVoteClick} index={index} employee={props.employee} user={props.user}/>\n\n                            {/* <div >\n                              <TextField\n                                //error\n                                id=\"outlined-error-helper-text\"\n                                label=\"puanla\"\n                                //defaultValue=\"-\"\n                                //helperText=\"Incorrect entry.\"\n                                variant=\"outlined\"\n                                style={{ width: \"100px\" }}\n                                color=\"secondary\"\n                                margin=\"dense\"\n                                type=\"number\"\n                                variant=\"outlined\"\n                              >\n                              </TextField>\n\n                            </div> */}\n\n                          </TableCell>\n                          : [column.id === \"buttons1\" ?\n                            <TableCell key={column.id} align={column.align} >\n                              <IconButton aria-label=\"delete\" size=\"small\">\n                                <MoreVertRoundedIcon color=\"primary\" style={{ color: \"#b71c1c\" }} />\n                              </IconButton> \n                            </TableCell>:\n                            <TableCell key={column.id} align={column.align} style={{ height: \"\" }}>\n                              <Typography variant=\"caption\">{column.format && typeof value === 'number' ? column.format(value) : value}</Typography>\n                            </TableCell>\n                          ]\n\n\n                      );\n                    })}\n\n                  </TableRow>\n                );\n              }) : null}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <TablePagination style={{ color: \"black\", marginLeft: \"\", border: \"0px solid red\"}}\n            rowsPerPageOptions={[5, 10, 25, 100]}\n            component=\"div\"\n            count={rows !== null ? rows.length : 0}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            labelRowsPerPage=\"\"\n            //ActionsComponent=\"da\"\n          >\n\n          </TablePagination>\n\n      {/* <Grid container item xs={12} spacing={0} style={{border: \"0px solid yellow\",  height: \"20%\"}}>\n\n        <Grid container item xs={6} spacing={0} style={{ color: \"black\", border: \"0px solid pink\" }}> */}\n\n          {/* <IconButton aria-label=\"delete\">\n            <CheckCircleIcon color=\"primary\" style={{ color: \"#b71c1c\" }} />\n          </IconButton>\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon color=\"primary\" style={{ color: \"#b71c1c\" }} />\n          </IconButton>\n          <IconButton aria-label=\"delete\">\n            <BorderColorIcon color=\"primary\" style={{ color: \"#b71c1c\" }} />\n          </IconButton>\n          <IconButton aria-label=\"delete\">\n            <AddCircleIcon color=\"primary\" style={{ color: \"#b71c1c\" }} />\n          </IconButton> */}\n        {/* </Grid>\n\n        <Grid container item xs={6} spacing={0} style={{border: \"0px solid black\"}}>\n          \n         <TablePagination style={{ color: \"black\", marginLeft: \"\", border: \"0px solid red\"}}\n            rowsPerPageOptions={[5, 10, 25, 100]}\n            component=\"div\"\n            count={rows !== null ? rows.length : 0}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            labelRowsPerPage=\"\"\n            //ActionsComponent=\"da\"\n          >\n\n          </TablePagination>\n           \n        </Grid>\n\n      </Grid> */}\n\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Drawer, Paper, Grid, ListItemAvatar, Button } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { fade } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nimport StickyHeadTable from \"./voteObjectivesTable.js\"\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n\n\n\n    paper: {\n        //backgroundColor: \"#eceff1\",\n        backgroundColor: \"white\",\n        marginBottom: \"10px\"\n\n\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n        margin: 10,\n        color: \"#b71c1c\"\n    },\n\n}));\n\nexport default function Employee(props) {\n    const classes = useStyles()\n\n    var result = Object.keys(props.selectedEmployee).map((key) => {\n        return [key, \": \", props.selectedEmployee[key]];\n    });\n\n    // console.log(\"employee on employee: \",result)\n\n    return (\n        <div>\n            <List>\n                {result.map((item, index) => (\n                    <div><ListItem dense divider button key={item}>\n\n                        <ListItemText>\n                            <Typography variant=\"caption\">{item[0] + \":\"}</Typography>\n                        </ListItemText>\n\n                        <Typography variant=\"caption\">{item[2]}</Typography>\n\n                    </ListItem>\n                        <Divider style={{ backgroundColor: \"grey\", padding: \"1px\", margin: \"5px\" }} orientation=\"horizontal\" />\n                    </div>\n\n                ))}\n            </List>\n        </div>\n\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Select, Input } from '@material-ui/core';\n\nimport mdata from \"../common/mockdata\"\n\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(2),\n        //minWidth: 120,\n        width: \"80%\",\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    formControlSelect: {\n        //backgroundColor: \"red\"\n\n\n    },\n    inputLabel: {\n        color: \"#b71c1c\",\n    },\n    menuItem: {\n        \"&:hover\": {\n            backgroundColor: \"#b71c1c\",\n            color: \"white\"\n        }\n    },\n    menuItemNone: {\n        \"&:hover\": {\n            backgroundColor: \"#b71c1c\",\n            color: \"white\"\n        }\n    }\n}));\n\nexport default function SimpleSelect(props) {\n    const classes = useStyles();\n    {console.log(\"props.selectedEmployeedasdsadas\" ,props.selectedEmployee)}\n\n    React.useEffect(() => {\n\n    }, []);\n\n    console.log(\"props.user: \", props.user)\n\n    return (\n        <div>\n            <FormControl\n                fullWidth\n                size=\"medium\"\n                variant=\"outlined\"\n                className={classes.formControl}\n\n\n            >\n                {props.selectedEmployee == \"\" ? \"\" :<InputLabel className={classes.inputLabel} htmlFor=\"my-input\">Çalışan Bilgileri</InputLabel>}\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={props.selectedEmployee}\n                    onChange={props.handleSelectEmployee}\n                    className={classes.formControlSelect}\n                    color=\"default\"\n                    variant=\"standard\"\n\n                >\n                    <MenuItem className={classes.menuItemNone} value=\"\" >\n                        <em>None</em>\n                    </MenuItem>\n                    {props.user.accessibleUserList.map((item, index) => (\n                        <MenuItem dense value={item} className={classes.menuItem}>{item.name + \" \" + item.surname} </MenuItem>\n                    ))}\n                </Select>\n                {props.selectedEmployee !== \"\" ? \"\" : <FormHelperText>Listeden çalışan bilgisini seçin</FormHelperText>}\n            </FormControl>\n\n\n\n\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Drawer, Paper, Grid } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nimport StickyHeadTable from \"./voteObjectivesTable.js\"\nimport Employee from \"./employee\"\nimport EmployeeSelectList from \"./employeeSelectList\"\n\nimport mdata from \"../common/mockdata\"\n\n\nimport axios from 'axios';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n\n    paper: {\n        //backgroundColor: \"#eceff1\",\n        backgroundColor: \"white\",\n        marginBottom: \"10px\"\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n        margin: 10,\n        color: \"#b71c1c\"\n    },\n\n}));\n\n\nexport default function UsersObjectives(props) {\n    const classes = useStyles()\n\n\n    const [selectedEmployee, setSelectedEmployee] = React.useState('');\n    const [employee, setEmployee] = React.useState('')\n    // console.log(\"employee: \", employee)\n\n    const handleSelectEmployee = (event) => {\n        setSelectedEmployee(event.target.value);\n        getEmployeeInfo(event.target.value.id)\n        //console.log(\"onchangee\", event.target.value)\n    };\n\n    /* const getEmployeeInfo = (id) => {\n        axios.get(`http://172.25.10.12:8081/user/findUserById?userID=` + id)\n            .then(res => {\n                if (res.status === 200) {\n                    // console.log(\"res.data\", res.data) \n                    setEmployee(res.data)\n                }\n                //this.setState({ persons });\n            })\n    } */\n\n    const getEmployeeInfo = (id) => {\n        console.log(\"handle selecten get emp id: \", id)\n        if (id !== undefined) {\n            mdata.map((item, index) => {\n                if (item.id === id) {\n                    setEmployee(item)\n                }\n            })\n        }else{\n            setEmployee(\"\")\n        }\n    }\n\n    /* const saveGrade = (objIndex, grade, year) => {\n        axios.post(`http://172.25.10.12:8081/user/saveGrade`, { userID: employee.id, objectiveIndex: objIndex, grade: grade, year: year })\n            .then(res => {\n                if (res.status === 200) {\n                    console.log(\"res.data\", res.data)\n                    //burada employee güncellenecek\n                    setEmployee(res.data)\n                }\n                //this.setState({ persons });\n            })\n    } */\n\n\n    const saveGrade = (objIndex, grade, year) => {\n        const graderListObj = {\n            id: props.user.id,\n            name: props.user.name,\n            surname: props.user.surname,\n            role: props.user.role,\n            department: props.user.department,\n            gender: props.user.gender,\n            grade: grade,\n            gradetDate: 1587548860134,\n            objectiveCoefficient: 1\n        }\n\n        mdata.map((item, index) => {\n            if (item.id === employee.id) {\n                item.objectives[0].objectiveList[objIndex].graderList.push(graderListObj)\n                setEmployee(item)\n            }\n        })\n    }\n\n    return (\n        <Grid container item xs={12} spacing={2} style={{ height: \"85vh\" }}>\n            {/* <Grid container item xs={12} direction=\"column\" spacing={0} style={{ height: \"55px\" }}>\n                    <Paper style={{ height: \"100%\" }}></Paper>\n                </Grid> */}\n\n            <Grid container item xs={3} spacing={2} style={{ height: \"100%\", border: \"0px solid black\" }} >\n                <Grid container item xs={12} spacing={0} direction=\"column\" style={{ height: \"15%\" }}>\n                    <Paper elevation={3} style={{ height: \"100%\", margin: \"0px\" }}>\n                        <EmployeeSelectList handleSelectEmployee={handleSelectEmployee} selectedEmployee={selectedEmployee} user={props.user} />\n                    </Paper>\n                </Grid>\n                <Grid container item xs={12} spacing={0} justify=\"flex-start\" direction=\"column\" style={{ height: \"85%\", overflow: \"auto\" }}>\n                    <Paper elevation={3} style={{ height: \"100%\", margin: \"0px\" }} >\n                        <Divider />\n                        <Employee selectedEmployee={selectedEmployee} />\n                    </Paper>\n                </Grid>\n            </Grid>\n\n            <Grid container item xs={9} spacing={2} direction=\"column\" style={{ height: \"100%\", width: \"\", overFlowX: \"auto\" }}>\n\n                <Grid container item xs={12} spacing={0} direction=\"column\" style={{ height: \"100%\", overflowX: \"auto\" }}>\n                    <Paper elevation={3} style={{ height: \"100%\", width: \"100%\", border: \"0px solid black\", margin: \"0px\" }}>\n\n                        {/* <Typography className={classes.title} variant=\"h5\" align=\"center\">Hedefler</Typography> */}\n                        <StickyHeadTable employee={employee} saveGrade={saveGrade} user={props.user} />\n\n                    </Paper>\n                </Grid>\n            </Grid>\n\n        </Grid>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Select, Input } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(2),\n        //minWidth: 120,\n        width: \"80%\",\n        \n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    formControlSelect: {\n        //backgroundColor: \"red\"\n\n\n    },\n    inputLabel: {\n        color: \"#b71c1c\",\n    },\n    menuItem: {\n        \"&:hover\": {\n            backgroundColor: \"#b71c1c\",\n            color: \"white\"\n        }\n    },\n    menuItemNone: {\n        \"&:hover\": {\n            backgroundColor: \"#b71c1c\",\n            color: \"white\"\n        }\n    }\n}));\n\nexport default function SimpleSelect(props) {\n    const classes = useStyles();\n    {console.log(\"props.selectedEmployeedasdsadas\" ,props.selectedEmployee)}\n\n    React.useEffect(() => {\n\n    }, []);\n\n    return (\n        <div>\n            <FormControl\n                fullWidth\n                size=\"medium\"\n                variant=\"outlined\"\n                className={classes.formControl}\n\n\n            >\n                {props.selectedEmployee == \"\" ? \"\" :<InputLabel className={classes.inputLabel} htmlFor=\"my-input\">Çalışan Bilgileri</InputLabel>}\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={props.selectedEmployee}\n                    onChange={props.handleSelectEmployee}\n                    className={classes.formControlSelect}\n                    color=\"default\"\n                    variant=\"standard\"\n\n                >\n                    <MenuItem className={classes.menuItemNone} value=\"\" >\n                        <em>None</em>\n                    </MenuItem>\n                    {props.user.accessibleUserList.map((item, index) => (\n                        <MenuItem dense value={item} className={classes.menuItem}>{item.name + \" \" + item.surname} </MenuItem>\n                    ))}\n                </Select>\n                {props.selectedEmployee !== \"\" ? \"\" : <FormHelperText>Listeden çalışan bilgisini seçin</FormHelperText>}\n            </FormControl>\n\n\n\n\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { Button, TextField, InputAdornment, Input, ListItem, List, ListItemText, Typography, Divider } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles(theme => ({\n    dialogOpenButton: {\n        color: \"black\",\n        //backgroundColor: \"#b71c1c\",\n        border: \"2px solid grey\"\n\n    },\n    voteTextField: {\n\n    },\n    dialog: {\n        border: \"3px solid grey\"\n\n    },\n    okButton: {\n        color: \"black\"\n    },\n    cancelButton: {\n        color: \"black\"\n    },\n\n}));\n\n\nexport default function AlertDialogSlide(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    console.log(\"props.employee::::::\", props.employee)\n    const gradeObjFromServer = props.employee.objectives[0].objectiveList[props.index].graderList.filter(i => i.id === props.user.id)[0]\n\n    console.log(\"emplyee from wtch dialog: \", props.employee.objectives[0].objectiveList[props.index].graderList)\n\n    return (\n        <div>\n            <Button variant=\"outlined\" size=\"small\" onClick={handleClickOpen} className={classes.dialogOpenButton}>\n                İZLE\n                {console.log(gradeObjFromServer !== undefined ? gradeObjFromServer.grade : \"gradeFromServer undefined\")}\n            </Button>\n\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n                //className={classes.dialog}\n                fullWidth\n            >\n                <div className={classes.dialog}>\n                    <DialogTitle id=\"alert-dialog-slide-title\">{props.employee.name + \" \" + props.employee.surname}</DialogTitle>\n                    <DialogContent dividers>\n                        <DialogContentText id=\"alert-dialog-slide-description\">\n\n                            <Typography component=\"span\" variant=\"caption\">\n                                Hedef Açıklaması: {props.employee.objectives[0].objectiveList[props.index].description}\n                            </Typography>\n                            <br/>\n                             \n                            <Typography component=\"span\" variant=\"caption\">\n                                Hedef Çeşidi: {props.employee.objectives[0].objectiveList[props.index].objectiveKind}\n                            </Typography>\n                            <br/>\n\n                            <Typography component=\"span\" variant=\"caption\">\n                                Periyot: {props.employee.objectives[0].objectiveList[props.index].period}\n                            </Typography>\n                            <br/>\n                            \n                            <Typography component=\"span\" variant=\"caption\">\n                                Hedef Değer: {props.employee.objectives[0].objectiveList[props.index].target}\n                            </Typography>\n                            <br/>\n                             \n                            <Typography component=\"span\" variant=\"caption\">\n                                Ağırlık: {props.employee.objectives[0].objectiveList[props.index].credit}\n                            </Typography>\n\n                            <Typography component=\"span\" variant=\"caption\">\n                                Birim: {props.employee.objectives[0].objectiveList[props.index].unit}\n                            </Typography>\n                            <br/>\n\n                        </DialogContentText>\n\n                        <Typography align=\"center\">Puan Verenler</Typography>\n                        <Divider style={{ backgroundColor: \"black\", color: \"black\", padding: \"1px\", margin: \"5px\" }} orientation=\"horizontal\" />\n                        \n                        <List>\n                            {props.employee.objectives[0].objectiveList[props.index].graderList.map((item, index) => (\n                                <div>\n                                    <ListItem dense divider button key={item}>\n                                        <ListItemText>\n                                            <Typography variant=\"caption\">{item.name + \" \"}</Typography>\n                                            <Typography variant=\"caption\">{item.surname + \":\"}</Typography>\n                                        </ListItemText>\n\n                                        <Typography variant=\"caption\">{item.grade}</Typography>\n\n                                    </ListItem>\n\n                                    <Divider style={{ backgroundColor: \"black\", color: \"black\", padding: \"1px\", margin: \"5px\" }} component=\"li\" orientation=\"horizontal\" />\n                                </div>\n                            ))}\n                        </List>\n\n                    </DialogContent>\n\n\n                    <DialogActions>\n                        <Button onClick={handleClose} variant=\"contained\" className={classes.okButton} >\n                            ÇIKIŞ\n                    </Button>\n\n                    </DialogActions>\n\n                </div>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Button, Typography, TextField, ListItem, Divider, Grid, IconButton } from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport DoneIcon from '@material-ui/icons/Done';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport DragIndicatorRoundedIcon from '@material-ui/icons/DragIndicatorRounded';\nimport MoreVertRoundedIcon from '@material-ui/icons/MoreVertRounded';\n\nimport WatchDialog from \"./watchDialog\"\n\nconst columns = [\n\n    { id: 'watch', label: '', align: 'left' },\n\n    { id: 'year', label: 'YIL', minWidth: 70, align: 'left' },\n    //{ id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\n    {\n        id: 'id',\n        label: 'SİCİL',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toLocaleString(),\n    },\n    {\n        id: 'nameSurname',\n        label: 'ADI\\u00a0SOYADI',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toLocaleString(),\n    },\n    {\n        id: 'targetSection',\n        label: 'HEDEF\\u00a0BÖLÜM',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toFixed(2),\n    },\n    {\n        id: 'targetType',\n        label: 'HEDEF\\u00a0TÜRÜ',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toFixed(2),\n    },\n    {\n        id: 'targetSort',\n        label: 'HEDEF\\u00a0ÇEŞİDİ',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toFixed(2),\n    },\n    {\n        id: 'description',\n        label: 'AÇIKLAMA',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toFixed(2),\n    },\n    {\n        id: 'period',\n        label: 'DÖNEM',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toFixed(2),\n    },\n    {\n        id: 'weight',\n        label: 'AĞIRLIK',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toFixed(2),\n    },\n    {\n        id: 'targetValue',\n        label: 'HEDEF\\u00a0DEĞER',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toFixed(2),\n    },\n    {\n        id: 'unit',\n        label: 'BİRİM',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toFixed(2),\n    },\n    {\n        id: 'minLimit',\n        label: 'ALT\\u00a0LİMİT',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toFixed(2),\n    },\n    {\n        id: 'maxLimit',\n        label: 'ÜST\\u00a0LİMİT',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toFixed(2),\n    },\n];\n\nfunction createData(year, id, nameSurname, targetSection,\n    targetType, targetSort, description, period, weight,\n    targetValue, unit, minLimit, maxLimit) {\n    //const density = population / size;\n    return {\n        year, id, nameSurname, targetSection,\n        targetType, targetSort, description, period, weight,\n        targetValue, unit, minLimit, maxLimit\n    };\n}\n\nconst useStyles = makeStyles({\n    root: {\n        display: \"grid\",\n        width: '100%',\n        height: \"100%\"\n    },\n    container: {\n        //height: \"100%\",\n        height: \"62vh\",\n        //height: \"100%\",\n        //display: \"flex\"\n        //width: \"70%\"\n    },\n    tablePagination: {\n        \n    },\n    voteButton: {\n        color: \"black\",\n        //backgroundColor: \"#b71c1c\",\n        border: \"2px solid #ffcdd2\",\n        height: \"40px\",\n\n    },\n    tableBodyRows: {\n        '&:hover': {\n            backgroundColor: \"#e0e0e0\",\n        }\n    },\n    '@global': {\n        '*::-webkit-scrollbar': {\n            width: '0.4em',\n            height: '0.4em',\n        },\n        '*::-webkit-scrollbar-track': {\n            'webkit-box-shadow': 'inset 0 0 6px rgba(255, 255, 255, 1.00)',\n        },\n        '*::-webkit-scrollbar-thumb': {\n            backgroundColor: 'rgba(183, 28, 28, 1.00)',\n            outline: '1px solid slategrey',\n            '-webkit-border-radius': '10px',\n        },\n    }\n});\n\nexport default function ObjectivesTableWatch(props) {\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    console.log(\"props.employee: \", props.employee)\n\n    const rows = []\n\n    const mafon = () => {\n        if (props.employee !== \"\") {\n            props.employee.objectives.map((i, index0) => i.objectiveList.map((item, index1) => {\n                rows.push(createData(i.year, props.employee.id, props.employee.name + \" \" + props.employee.surname,\n                    props.employee.department, item.objectiveType, item.objectiveKind, item.description,\n                    item.period, item.credit, item.target, item.unit, item.lowerLimit, item.upperLimit))\n            })\n            )\n        }\n    }\n    mafon()\n\n    return (\n        <Paper className={classes.root}>\n            <TableContainer className={classes.container}>\n                <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map(column => (\n                                <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth, backgroundColor: \"#b71c1c\", color: \"white\" }}\n                                    padding=\"checkbox\"\n                                >\n                                    <Typography variant=\"subtitle2\">{column.label}</Typography>\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody >\n                        {rows !== null ?\n                            rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n                                return (\n                                    <TableRow role=\"checkbox\" tabIndex={-1} key={index} className={classes.tableBodyRows}>\n                                        {columns.map(column => {\n                                            const value = row[column.id];\n                                            return (\n                                                column.id === 'watch'\n                                                    ?\n                                                    <TableCell>\n                                                        <WatchDialog index={index} employee={props.employee} user={props.user} />\n                                                    </TableCell>\n                                                    :\n                                                    <TableCell key={column.id} align={column.align} style={{ height: \"\" }}>\n                                                        <Typography variant=\"caption\">{column.format && typeof value === 'number' ? column.format(value) : value}</Typography>\n                                                    </TableCell>\n                                            );\n                                        })}\n\n                                    </TableRow>\n                                );\n                            }) : null}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n            <TablePagination style={{ color: \"black\"}}\n                rowsPerPageOptions={[5, 10, 25, 100]}\n                component=\"div\"\n                count={rows !== null ? rows.length : 0}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                labelRowsPerPage=\"\"\n                className={classes.tablePagination}\n            //ActionsComponent=\"da\"\n            >\n            </TablePagination>\n\n            {console.log(\"rows.length\", rows.length)}\n\n        </Paper>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper } from '@material-ui/core';\nimport axios from 'axios';\n\nimport EmployeeSelectListWatch from \"./employeeSelectListWatch\"\nimport ObjectivesTableWatch from \"./objectivesTableWatch\"\n\nimport mdata from \"../common/mockdata\"\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n\n\n}));\n\nexport default function Watch(props) {\n    const classes = useStyles()\n\n    const [selectedEmployee, setSelectedEmployee] = React.useState('');\n    const [employee, setEmployee] = React.useState('')\n    // console.log(\"employee: \", employee)\n\n    const handleSelectEmployee = (event) => {\n        setSelectedEmployee(event.target.value);\n        getEmployeeInfo(event.target.value.id)\n        //console.log(\"onchangee\", event.target.value)\n    };\n\n    /* const getEmployeeInfo = (id) => {\n        axios.get(`http://172.25.10.12:8081/user/findUserById?userID=` + id)\n            .then(res => {\n                if (res.status === 200) {\n                    // console.log(\"res.data\", res.data) \n                    setEmployee(res.data)\n                }\n                //this.setState({ persons });\n            })\n    } */\n\n    const getEmployeeInfo = (id) => {\n        console.log(\"handle selecten get emp id: \", id)\n        if (id !== undefined) {\n            mdata.map((item, index) => {\n                if (item.id === id) {\n                    setEmployee(item)\n                }\n            })\n        }else{\n            setEmployee(\"\")\n        }\n    }\n\n    return (\n\n        <Grid container item xs={12} spacing={2} style={{ height: \"85vh\" }}>\n\n            <Grid container item xs={3} direction=\"column\" style={{ height: \"15%\" }}>\n                <Paper style={{ height: \"100%\", margin: \"0px\" }}>\n                    <EmployeeSelectListWatch handleSelectEmployee={handleSelectEmployee} selectedEmployee={selectedEmployee} user={props.user} />\n                </Paper>\n            </Grid>\n\n            <Grid container item xs={9} direction=\"column\" style={{ height: \"15%\" }}>\n                <Paper style={{ height: \"100%\", margin: \"0px\" }}>\n\n                </Paper>\n            </Grid>\n\n\n            <Grid container item xs={12} direction=\"column\" style={{ height: \"85%\" }}>\n                <div style={{ height: \"100%\" }}>\n                    <ObjectivesTableWatch employee={employee} user={props.user} />\n                </div>\n\n                {/* <Paper style={{ height: \"100%\" }}>\n                        \n                    </Paper> */}\n\n            </Grid>\n\n        </Grid>\n\n\n    )\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Button, Typography, TextField, ListItem, Divider, Grid, IconButton, TableFooter } from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport DoneIcon from '@material-ui/icons/Done';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport DragIndicatorRoundedIcon from '@material-ui/icons/DragIndicatorRounded';\nimport MoreVertRoundedIcon from '@material-ui/icons/MoreVertRounded';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nconst columns = [\n    /* { id: 'buttons', label: '', minWidth: 10, align: 'left' }, */\n    { id: 'edit', label: '', minWidth: 70, align: 'left' },\n\n    { id: 'year', label: 'YIL', minWidth: 70, align: 'left' },\n    //{ id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\n    {\n        id: 'id',\n        label: 'SİCİL',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toLocaleString(),\n    },\n    {\n        id: 'nameSurname',\n        label: 'ADI\\u00a0SOYADI',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toLocaleString(),\n    },\n    {\n        id: 'targetSection',\n        label: 'HEDEF\\u00a0BÖLÜM',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toFixed(2),\n    },\n    {\n        id: 'targetType',\n        label: 'HEDEF\\u00a0TÜRÜ',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toFixed(2),\n    },\n    {\n        id: 'targetSort',\n        label: 'HEDEF\\u00a0ÇEŞİDİ',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toFixed(2),\n    },\n    {\n        id: 'description',\n        label: 'AÇIKLAMA',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toFixed(2),\n    },\n    {\n        id: 'period',\n        label: 'DÖNEM',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toFixed(2),\n    },\n    {\n        id: 'weight',\n        label: 'AĞIRLIK',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toFixed(2),\n    },\n    {\n        id: 'targetValue',\n        label: 'HEDEF\\u00a0DEĞER',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toFixed(2),\n    },\n    {\n        id: 'unit',\n        label: 'BİRİM',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toFixed(2),\n    },\n    {\n        id: 'minLimit',\n        label: 'ALT\\u00a0LİMİT',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toFixed(2),\n    },\n    {\n        id: 'maxLimit',\n        label: 'ÜST\\u00a0LİMİT',\n        //minWidth: 70,\n        align: 'left',\n        format: value => value.toFixed(2),\n    },\n];\n\nfunction createData(year, id, nameSurname, targetSection,\n    targetType, targetSort, description, period, weight,\n    targetValue, unit, minLimit, maxLimit) {\n    //const density = population / size;\n    return {\n        year, id, nameSurname, targetSection,\n        targetType, targetSort, description, period, weight,\n        targetValue, unit, minLimit, maxLimit\n    };\n}\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'grid',\n        width: '100%',\n        height: '100%',\n    },\n    container: {\n        height: \"70vh\",\n        //height: 100\n        //width: \"70%\"\n    },\n    voteButton: {\n        color: \"black\",\n        //backgroundColor: \"#b71c1c\",\n        border: \"2px solid #ffcdd2\",\n        height: \"40px\",\n\n    },\n    tableBodyRows: {\n        '&:hover': {\n            //backgroundColor: \"#e0e0e0\",\n        },\n        '&$selected:selected':{\n            backgroundColor: \"red\"\n        },\n        '&.MuiTableRow-root.Mui-selected': {\n            backgroundColor: \"#e0e0e0\"\n          }\n    },\n    '@global': {\n        '*::-webkit-scrollbar': {\n            width: '0.4em',\n            height: '0.4em',\n        },\n        '*::-webkit-scrollbar-track': {\n            'webkit-box-shadow': 'inset 0 0 6px rgba(255, 255, 255, 1.00)',\n        },\n        '*::-webkit-scrollbar-thumb': {\n            backgroundColor: 'rgba(183, 28, 28, 1.00)',\n            outline: '1px solid slategrey',\n            '-webkit-border-radius': '10px',\n        },\n    }\n});\n\nexport default function SetObjectivesTable(props) {\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    console.log(\"props.employee from set objectives table: \", props.employeeWithObjYear)\n\n    const rows = []\n    const employeeProp = props.employeeWithObjYear.employee;\n    const yearProp = props.employeeWithObjYear.year;\n\n    const mafon = () => {\n        if (employeeProp !== \"\" & yearProp !== \"\") {\n            employeeProp.objectives.filter(j => j.year === yearProp)[0].objectiveList.map((item, index1) => {\n                rows.push(createData(yearProp, employeeProp.id, employeeProp.name + \" \" + employeeProp.surname,\n                    employeeProp.department, item.objectiveType, item.objectiveKind, item.description,\n                    item.period, item.credit, item.target, item.unit, item.lowerLimit, item.upperLimit))\n            })\n\n        }\n    }\n    mafon()\n\n    return (\n        <Paper className={classes.root} elevation={9} square={true}>\n            <TableContainer className={classes.container}>\n                <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map(column => (\n                                <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth, backgroundColor: \"#b71c1c\", color: \"white\" }}\n                                    padding=\"checkbox\"\n                                >\n                                    <Typography variant=\"subtitle2\">{column.label}</Typography>\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody >\n                        {rows !== null ?\n                            rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n                                return (\n                                    <TableRow role=\"checkbox\" selected={index === props.selectedIndex} tabIndex={-1} key={index} className={classes.tableBodyRows}>\n                                        {columns.map(column => {\n                                            const value = row[column.id];\n                                            return (\n                                                column.id === \"edit\" ?\n                                                    <TableCell key={column.id} align={column.align}>\n                                                        <div style={{ display: \"\", float: \"left\", marginLeft: \"\", marginTop: 0, minWidth: 100 }}>\n                                                            <IconButton aria-label=\"delete\" onClick={() => props.handleSelectObjective(index, \"edit\")}>\n                                                                <EditIcon color=\"primary\" style={{ color: \"#b71c1c\" }} />\n                                                            </IconButton>\n                                                            <IconButton aria-label=\"delete\" onClick={() => props.handleSelectObjective(index, \"delete\")}>\n                                                                <DeleteIcon color=\"primary\" style={{ color: \"#b71c1c\" }} />\n                                                            </IconButton>\n                                                        </div>\n                                                    </TableCell>\n                                                    :\n                                                    <TableCell key={column.id} align={column.align} style={{ height: \"\" }}>\n                                                        <Typography variant=\"caption\">{column.format && typeof value === 'number' ? column.format(value) : value}</Typography>\n                                                    </TableCell>\n\n                                            );\n                                        })}\n\n                                    </TableRow>\n                                );\n                            }) : null}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n            <TablePagination style={{ color: \"black\", marginLeft: \"\", border: \"0px solid red\" }}\n                rowsPerPageOptions={[5, 10, 25, 100]}\n                component=\"div\"\n                count={rows !== null ? rows.length : 0}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                labelRowsPerPage=\"\"\n            //ActionsComponent=\"da\"\n            >\n\n            </TablePagination>\n\n            {/* <Grid container item xs={12} spacing={0} style={{border: \"0px solid yellow\",  height: \"20%\"}}>\n\n        <Grid container item xs={6} spacing={0} style={{ color: \"black\", border: \"0px solid pink\" }}> */}\n\n            {/* <IconButton aria-label=\"delete\">\n            <CheckCircleIcon color=\"primary\" style={{ color: \"#b71c1c\" }} />\n          </IconButton>\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon color=\"primary\" style={{ color: \"#b71c1c\" }} />\n          </IconButton>\n          <IconButton aria-label=\"delete\">\n            <BorderColorIcon color=\"primary\" style={{ color: \"#b71c1c\" }} />\n          </IconButton>\n          <IconButton aria-label=\"delete\">\n            <AddCircleIcon color=\"primary\" style={{ color: \"#b71c1c\" }} />\n          </IconButton> */}\n            {/* </Grid>\n\n        <Grid container item xs={6} spacing={0} style={{border: \"0px solid black\"}}>\n          \n         <TablePagination style={{ color: \"black\", marginLeft: \"\", border: \"0px solid red\"}}\n            rowsPerPageOptions={[5, 10, 25, 100]}\n            component=\"div\"\n            count={rows !== null ? rows.length : 0}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            labelRowsPerPage=\"\"\n            //ActionsComponent=\"da\"\n          >\n\n          </TablePagination>\n           \n        </Grid>\n\n      </Grid> */}\n\n        </Paper>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Select, Input, TextField, Paper, MenuList, Menu, ListItem, Typography, ListItemIcon, Divider, ListItemText, ListSubheader, List, ListItemSecondaryAction, IconButton } from '@material-ui/core';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport Collapse from '@material-ui/core/Collapse';\n\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        //margin: theme.spacing(2),\n        margin: \"1% 1% 1% 1%\",\n        //minWidth: 120,\n        width: \"30%\",\n        float: \"left\",\n        //marginLeft: \"15%\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    formControlSelect: {\n        //backgroundColor: \"red\"\n\n    },\n    inputLabel: {\n        color: \"#b71c1c\",\n    },\n    menuItem: {\n        \"&:hover\": {\n            backgroundColor: \"#b71c1c\",\n            color: \"white\"\n        }\n    },\n    menuItemNone: {\n        \"&:hover\": {\n            backgroundColor: \"#b71c1c\",\n            color: \"white\"\n        }\n    }\n}));\n\nexport default function SetObjectivesSelectEmployee(props) {\n    const classes = useStyles();\n    { console.log(\"props.selectedEmployee from setobjectives select employee: \", props.selectedEmployee) }\n\n    React.useEffect(() => {\n\n    }, []);\n\n    return (\n        <div>\n            <FormControl\n                fullWidth\n                size=\"medium\"\n                variant=\"outlined\"\n                className={classes.formControl}\n            >\n                {/* <InputLabel className={classes.inputLabel} htmlFor=\"my-input\">Personel Seçin</InputLabel> */}\n                \n                <TextField\n                    required\n                    id=\"outlined-required\"\n                    label=\"Personel Seç\"\n                    //defaultValue=\"select\"\n                    value={props.selectedEmployee}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    select\n                    onChange={props.handleSelectEmployee}\n                    //style={{ width: \"40%\" }}\n                    className={classes.formControlSelect}\n                >\n\n                    \n                    <MenuItem className={classes.menuItemNone} value=\"\" >\n                        <em>None</em>\n                    </MenuItem>\n\n                    <Divider />\n\n                    {/* <MenuItem className={\"\"} value={props.user} >\n                        <ListItemIcon>\n                            <InboxIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Kendi Hedeflerimi Düzenle\" secondary={props.user.name + \" \" + props.user.surname} />\n                        <DeleteIcon />\n                    </MenuItem>\n                    <Divider /> */}\n\n                    <MenuItem disabled component=\"div\" id=\"nested-list-subheader\">\n                        <ListItemIcon>\n                            <InboxIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"\" secondary=\"Personel Hedefleri\" />\n                        \n                    </MenuItem>\n\n                    <Divider />\n\n                    {props.user.accessibleUserList.map((item, index) => (\n                        <MenuItem dense value={item} key={index} className={classes.menuItem}>{item.name + \" \" + item.surname} </MenuItem>\n                    ))}\n\n                </TextField>\n\n                \n\n\n                {/* <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={props.selectedEmployee}\n                    onChange={props.handleSelectEmployee}\n                    className={classes.formControlSelect}\n                    //color=\"default\"\n                    //variant=\"standard\"\n                    variant=\"outlined\"\n\n                >\n                    <MenuItem className={classes.menuItemNone} value=\"\" >\n                        <em>None</em>\n                    </MenuItem>\n                    {props.user.accessibleUserList.map((item, index) => (\n                        <MenuItem dense value={item} key={index} className={classes.menuItem}>{item.name + \" \" + item.surname} </MenuItem>\n                    ))}\n                </Select> */}\n                {/* {props.selectedEmployee !== \"\" ? \"\" : <FormHelperText>Personel Seçin</FormHelperText>} */}\n            </FormControl>\n\n\n\n\n        </div>\n    );\n}\n","import React, { useEffect } from \"react\"\nimport {\n    Grid, Paper, IconButton, Box, Divider, Button, Menu, TextField, FormControl,\n    InputAdornment, Fab, OutlinedInput, FormHelperText, ButtonGroup,\n    Typography, MenuItem\n} from '@material-ui/core'\nimport SubdirectoryArrowLeftIcon from '@material-ui/icons/SubdirectoryArrowLeft';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(2),\n            //width: 400,\n        },\n        height: \"\",\n    },\n    topGrid: {\n        //margin: theme.spacing(2),\n        width: \"100%\",\n        marginTop: \"0%\",\n        //height: \"100%\",\n    },\n    fabButton: {\n        position: 'absolute',\n        zIndex: 1,\n        top: 460,\n        left: 900,\n        right: 0,\n        margin: '0 auto',\n    },\n}));\n\nconst yearEnum = Object.freeze({\n    _2020: 2020,\n    //_2021: 2021\n})\nconst typeEnum = Object.freeze({\n    is: \"İş Hedefleri\",\n    kisisel: \"Kişisel Hedefler\"\n})\nconst kindEnum = Object.freeze({\n    is: \"İş Performansı\",\n    hata: \"Hata Oranı\",\n    devam: \"Devamsızlık Performansı\",\n    verim: \"Verimlilik Performansı\",\n    maliyet: \"Maliyet Azaltma\",\n    surec: \"Süreç Etkinliğini Artırma Performansı\",\n    iyiles: \"İyileştirme Önerileri\",\n    teslim: \"Teslim Etme Performansı\",\n    yardim: \"Yardımcı Sanayiye İş Aktarma Performansı\"\n})\nconst periodEnum = Object.freeze({\n    gun: \"Günlük\",\n    ay: \"Aylık\",\n    ucay: \"3 Aylık\",\n    altiay: \"6 Aylık\",\n    dokuzay: \"9 Aylık\",\n    yil: \"Yıllık\",\n})\nconst unitEnum = Object.freeze({\n    yuzde: \"Yüzde\",\n    adam: \"Adam/Saat\",\n    adet: \"Adet\",\n    ay: \"Ay\",\n    bulgu: \"Bulgu\",\n    dakika: \"Dakika\",\n    gun: \"Gün\",\n    hafta: \"Hafta\",\n    kere: \"Kere/Kez\",\n    saat: \"Saat\",\n    tl: \"TL\",\n    puan: \"Puan\"\n})\n\nexport default function SetObjectivesForm(props) {\n    const classes = useStyles();\n\n    const [yearInput, setYearInput] = React.useState(\"\")\n    const [objTypeInput, setObjTypeInput] = React.useState(\"\")\n    const [objKindInput, setObjKindInput] = React.useState(\"\")\n    const [descriptionInput, setDescriptionInput] = React.useState(\"\")\n    const [periodInput, setPeriodInput] = React.useState(\"\")\n    const [unitInput, setUnitInput] = React.useState(\"\")\n    const [creditInput, setCreditInput] = React.useState(\"\")\n    const [targetInput, setTargetInput] = React.useState(\"\")\n    const [minInput, setMinInput] = React.useState(\"\")\n    const [maxInput, setMaxInput] = React.useState(\"\")\n\n    const newObjective = {\n        year: yearInput,\n        creatorID: \"\",\n        objectiveType: objTypeInput,\n        objectiveKind: objKindInput,\n        description: descriptionInput,\n        period: periodInput,\n        credit: creditInput,\n        target: targetInput,\n        unit: unitInput,\n        lowerLimit: minInput,\n        upperLimit: maxInput\n\n    }\n\n    useEffect(() => {\n        props.initNewObjective(newObjective)\n    }, [newObjective])\n\n\n\n    const handleSaveObjButton = () => {\n        props.saveObjective(newObjective);\n    }\n\n    const handleYearInput = (event) => {\n        setYearInput(event.target.value)\n    }\n\n    const handleObjTypeInput = (event) => {\n        setObjTypeInput(event.target.value)\n    }\n\n    const handleObjKindInput = (event) => {\n        setObjKindInput(event.target.value)\n    }\n\n    const handleDescriptionChange = (event) => {\n        setDescriptionInput(event.target.value)\n    }\n\n    const handlePeriodInput = (event) => {\n        setPeriodInput(event.target.value)\n    }\n\n    const handleUnitInput = (event) => {\n        setUnitInput(event.target.value)\n    }\n\n    const handleCreditInput = (event) => {\n        setCreditInput(event.target.value)\n    }\n\n    const handleTargetInput = (event) => {\n        setTargetInput(event.target.value)\n    }\n\n    const handleMinInput = (event) => {\n        setMinInput(event.target.value)\n    }\n\n    const handleMaxInput = (event) => {\n        setMaxInput(event.target.value)\n    }\n\n    const handleClearDescriptionButton = () => {\n        setDescriptionInput(\"\")\n    }\n    console.log(\"employee from set objectives add obj form: \", props.employee)\n\n    return (\n\n        <Paper elevation={9} square={true} style={{ display: \"\", height: \"100%\", width: \"\", border: \"0px solid black\", margin: \"0px\", backgroundColor: \"#e0e0e0\" }}>\n            <FormControl className={classes.root} noValidate autoComplete=\"off\" style={{ height: \"\", width: \"\", border: \"1px solid black\", margin: \"0px\" }}>\n\n                <Grid container item xs={12} spacing={0} direction=\"row\" className={classes.topGrid1} style={{height:\"\"}}>\n\n                    <Grid container item xs={6} spacing={0} direction=\"column\" style={{ height: \"40vh\", width:\"50vw\", overflow: \"auto\", borderRight: \"1px solid black\" }}>\n                        {/* <Paper style={{ backgroundColor: \"cyan\", height: \"100%\" }}> */}\n                            <TextField\n                                required\n                                id=\"outlined-number\"\n                                label=\"Hedef Yılı\"\n                                /* InputLabelProps={{\n                                    shrink: true,\n                                }} */\n                                variant=\"outlined\"\n                                //defaultValue=\"select\"\n                                value={yearInput}\n                                size=\"small\"\n                                select\n                                onChange={handleYearInput}\n                                style={{ width: \"40%\" }}\n                            >\n                                <MenuItem value=\"\" >\n                                    <em>None</em>\n                                </MenuItem>\n                                {Object.keys(yearEnum).map((item, index) =>\n                                    <MenuItem key={\"year_\" + index} value={yearEnum[item]}>\n                                        {yearEnum[item]}\n                                    </MenuItem>\n                                )}\n\n                            </TextField>\n\n                            <TextField\n                                required\n                                id=\"outlined-required\"\n                                label=\"Hedef Türü\"\n                                value={objTypeInput}\n                                //defaultValue=\"select\"\n                                variant=\"outlined\"\n                                size=\"small\"\n                                select\n                                onChange={handleObjTypeInput}\n                                style={{ width: \"40%\" }}\n                            >\n                                <MenuItem value=\"\" >\n                                    <em>None</em>\n                                </MenuItem>\n                                {/* <MenuItem key=\"type\" value={typeEnum}>\n                                    {typeEnum}\n                                </MenuItem> */}\n                                {Object.keys(typeEnum).map((item, index) =>\n                                    <MenuItem key={\"type\" + index} value={typeEnum[item]}>\n                                        {typeEnum[item]}\n                                    </MenuItem>\n                                )}\n                            </TextField>\n\n                            <TextField\n                                required\n                                id=\"outlined-required\"\n                                label=\"Hedef Çeşidi\"\n                                value={objKindInput}\n                                //defaultValue=\"select\"\n                                variant=\"outlined\"\n                                size=\"small\"\n                                select\n                                onChange={handleObjKindInput}\n                                style={{ width: \"40%\" }}\n                            >\n                                <MenuItem value=\"\" >\n                                    <em>None</em>\n                                </MenuItem>\n                                {/* <MenuItem key=\"kind\" value={kindEnum}>\n                                    {kindEnum}\n                                </MenuItem> */}\n                                {Object.keys(kindEnum).map((item, index) =>\n                                    <MenuItem key={\"kind\" + index} value={kindEnum[item]}>\n                                        {kindEnum[item]}\n                                    </MenuItem>\n                                )}\n                            </TextField>\n\n                            <TextField\n                                required\n                                id=\"outlined-required\"\n                                label=\"Dönem\"\n                                value={periodInput}\n                                //defaultValue=\"select\"\n                                variant=\"outlined\"\n                                size=\"small\"\n                                select\n                                onChange={handlePeriodInput}\n                                style={{ width: \"40%\" }}\n                            >\n                                <MenuItem value=\"\" >\n                                    <em>None</em>\n                                </MenuItem>\n                                {/* <MenuItem key=\"period\" value={periodEnum}>\n                                    {periodEnum}\n                                </MenuItem> */}\n                                {Object.keys(periodEnum).map((item, index) =>\n                                    <MenuItem key={\"period\" + index} value={periodEnum[item]}>\n                                        {periodEnum[item]}\n                                    </MenuItem>\n                                )}\n                            </TextField>\n\n                            <TextField\n                                required\n                                id=\"outlined-required\"\n                                label=\"Birim\"\n                                //defaultValue=\"select\"\n                                value={unitInput}\n                                variant=\"outlined\"\n                                size=\"small\"\n                                select\n                                onChange={handleUnitInput}\n                                style={{ width: \"40%\" }}\n                            >\n                                <MenuItem value=\"\" >\n                                    <em>None</em>\n                                </MenuItem>\n                                {/* <MenuItem key=\"unit\" value={unitEnum}>\n                                    {unitEnum}\n                                </MenuItem> */}\n                                {Object.keys(unitEnum).map((item, index) =>\n                                    <MenuItem key={\"unit\" + index} value={unitEnum[item]}>\n                                        {unitEnum[item]}\n                                    </MenuItem>\n                                )}\n                            </TextField>\n\n                            <TextField\n                                label=\"Ağırlık\"\n                                id=\"outlined-start-adornment\"\n                                //className={clsx(classes.margin, classes.textField)}\n                                /* InputProps={{\n                                    startAdornment: <InputAdornment marginDense position=\"start\">%</InputAdornment>,\n                                }} */\n                                variant=\"outlined\"\n                                type=\"number\"\n                                size=\"small\"\n                                value={creditInput}\n                                onChange={handleCreditInput}\n                                style={{ width: \"40%\" }}\n                            />\n                            <TextField\n                                required\n                                id=\"outlined-required\"\n                                label=\"Hedef Değer\"\n                                value={targetInput}\n                                onChange={handleTargetInput}\n                                //defaultValue=\"\"\n                                type=\"number\"\n                                variant=\"outlined\"\n                                size=\"small\"\n                                style={{ width: \"40%\" }}\n                            />\n\n                            <TextField\n                                required\n                                id=\"outlined-required\"\n                                label=\"Alt Limit\"\n                                value={minInput}\n                                onChange={handleMinInput}\n                                //defaultValue=\"\"\n                                type=\"number\"\n                                variant=\"outlined\"\n                                size=\"small\"\n                                style={{ width: \"40%\" }}\n                            />\n                            <TextField\n                                required\n                                id=\"outlined-required\"\n                                label=\"Üst Limit\"\n                                value={maxInput}\n                                onChange={handleMaxInput}\n                                //defaultValue=\"\"\n                                type=\"number\"\n                                variant=\"outlined\"\n                                size=\"small\"\n                                style={{ width: \"40%\" }}\n                            />\n\n                        {/* </Paper> */}\n                    </Grid>\n                    <Grid container item xs={6} direction=\"column\" style={{ height: \"40vh\", backgroundColor: \"\", overflow: \"auto\" }}>\n\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Açıklama\"\n                            onChange={handleDescriptionChange}\n                            value={descriptionInput}\n                            //defaultValue=\"\"\n                            variant=\"outlined\"\n                            multiline\n                            rows=\"15\"\n                            style={{ height: \"\", width: \"\" }}\n\n                        ></TextField>\n\n                    </Grid>\n                </Grid>\n            </FormControl>\n\n        </Paper>\n    )\n}","import React, { useEffect } from \"react\"\nimport {\n    Grid, Paper, IconButton, Box, Divider, Button, Menu, TextField, FormControl,\n    InputAdornment, Fab, OutlinedInput, FormHelperText, ButtonGroup,\n    Typography, MenuItem, Input\n} from '@material-ui/core'\nimport SubdirectoryArrowLeftIcon from '@material-ui/icons/SubdirectoryArrowLeft';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(2),\n            //width: 400,\n        },\n        height: \"\",\n\n    },\n    topGrid: {\n        //margin: theme.spacing(2),\n        width: \"100%\",\n        marginTop: \"0%\",\n        //height: \"100%\",\n    },\n    editButtons: {\n        color: \"grey\",\n        '&:hover': {\n            color: \"grey\",\n            //backgroundColor: \"white\"\n        }\n    }\n}));\n\nconst yearEnum = Object.freeze({\n    _2020: 2020,\n    //_2021: 2021\n})\nconst typeEnum = Object.freeze({\n    is: \"İş Hedefleri\",\n    kisisel: \"Kişisel Hedefler\"\n})\nconst kindEnum = Object.freeze({\n    is: \"İş Performansı\",\n    hata: \"Hata Oranı\",\n    devam: \"Devamsızlık Performansı\",\n    verim: \"Verimlilik Performansı\",\n    maliyet: \"Maliyet Azaltma\",\n    surec: \"Süreç Etkinliğini Artırma Performansı\",\n    iyiles: \"İyileştirme Önerileri\",\n    teslim: \"Teslim Etme Performansı\",\n    yardim: \"Yardımcı Sanayiye İş Aktarma Performansı\"\n})\nconst periodEnum = Object.freeze({\n    gun: \"Günlük\",\n    ay: \"Aylık\",\n    ucay: \"3 Aylık\",\n    altiay: \"6 Aylık\",\n    dokuzay: \"9 Aylık\",\n    yil: \"Yıllık\",\n})\nconst unitEnum = Object.freeze({\n    yuzde: \"Yüzde\",\n    adam: \"Adam/Saat\",\n    adet: \"Adet\",\n    ay: \"Ay\",\n    bulgu: \"Bulgu\",\n    dakika: \"Dakika\",\n    gun: \"Gün\",\n    hafta: \"Hafta\",\n    kere: \"Kere/Kez\",\n    saat: \"Saat\",\n    tl: \"TL\",\n    puan: \"Puan\"\n})\n\nexport default function EditObjectivesForm(props) {\n    const classes = useStyles();\n\n    const [objTypeInput, setObjTypeInput] = React.useState(\"\")\n    const [objKindInput, setObjKindInput] = React.useState(\"\")\n    const [descriptionInput, setDescriptionInput] = React.useState(\"\")\n    const [periodInput, setPeriodInput] = React.useState(\"\")\n    const [unitInput, setUnitInput] = React.useState(\"\")\n    const [creditInput, setCreditInput] = React.useState(\"\")\n    const [targetInput, setTargetInput] = React.useState(\"\")\n    const [minInput, setMinInput] = React.useState(\"\")\n    const [maxInput, setMaxInput] = React.useState(\"\")\n\n    useEffect(() => {\n        if (props.selectedObjective !== \"\" & props.selectedObjective !== null & props.selectedObjective !== undefined) {\n            setObjTypeInput(props.selectedObjective.objective.objectiveType)\n            setObjKindInput(props.selectedObjective.objective.objectiveKind)\n            setDescriptionInput(props.selectedObjective.objective.description)\n            setPeriodInput(props.selectedObjective.objective.period)\n            setUnitInput(props.selectedObjective.objective.unit)\n            setCreditInput(props.selectedObjective.objective.credit)\n            setTargetInput(props.selectedObjective.objective.target)\n            setMinInput(props.selectedObjective.objective.lowerLimit)\n            setMaxInput(props.selectedObjective.objective.upperLimit)\n        }/* else{\n            setObjTypeInput(\"\")\n            setObjKindInput(\"\")\n            setDescriptionInput(\"\")\n            setPeriodInput(\"\")\n            setUnitInput(\"\")\n            setCreditInput(\"\")\n            setTargetInput(\"\")\n            setMinInput(\"\")\n            setMaxInput(\"\")\n        } */\n    }, [props.selectedObjective])\n\n    const updatedObjective = {\n        creatorID: \"\",\n        objectiveType: objTypeInput,\n        objectiveKind: objKindInput,\n        description: descriptionInput,\n        period: periodInput,\n        credit: creditInput,\n        target: targetInput,\n        unit: unitInput,\n        lowerLimit: minInput,\n        upperLimit: maxInput\n    }\n\n    const handleUpdateObjButton = () => {\n        props.updateObjective(updatedObjective);\n    }\n\n    //console.log(\"selectedObjective: \", props.selectedObjective)\n\n    const handleObjTypeInput = (event) => {\n        setObjTypeInput(event.target.value)\n    }\n\n    const handleObjKindInput = (event) => {\n        setObjKindInput(event.target.value)\n    }\n\n    const handleDescriptionChange = (event) => {\n        setDescriptionInput(event.target.value)\n    }\n\n    const handlePeriodInput = (event) => {\n        setPeriodInput(event.target.value)\n    }\n\n    const handleUnitInput = (event) => {\n        setUnitInput(event.target.value)\n    }\n\n    const handleCreditInput = (event) => {\n        setCreditInput(event.target.value)\n    }\n\n    const handleTargetInput = (event) => {\n        setTargetInput(event.target.value)\n    }\n\n    const handleMinInput = (event) => {\n        setMinInput(event.target.value)\n    }\n\n    const handleMaxInput = (event) => {\n        setMaxInput(event.target.value)\n    }\n\n    const handleClearDescriptionButton = () => {\n        setDescriptionInput(\"\")\n    }\n\n    return (\n\n        <Paper elevation={9} square={true} style={{ display: \"\", height: \"100%\", width: \"100%\", border: \"0px solid black\", margin: \"0px\", backgroundColor: \"#e0e0e0\" }}>\n            <FormControl className={classes.root} noValidate autoComplete=\"off\">\n\n                <Grid container item xs={12} spacing={0} className={classes.topGrid} >\n\n                    <Grid container item xs={12} spacing={0} direction=\"column\" style={{ minHeight: \"\", backgroundColor: \"#b71c1c\" }}>\n                        <div style={{ minHeight: \"\" }}>\n                            <IconButton aria-label=\"delete\" onClick={props.handleCloseEditButton} style={{ float: \"left\" }} size=\"small\">\n                                <ArrowForwardIosIcon fontSize=\"default\" color=\"primary\" style={{ color: \"white\" }} />\n                            </IconButton>\n                        </div>\n                    </Grid>\n\n                    {/* <Grid container item xs={12} spacing={0} direction=\"column\" style={{ height: \"70vh\", borderLeft: \"0px solid black\", borderRight: \"0px solid black\" }}> */}\n                    <Grid style={{ backgroundColor: \"#e0e0e0\", height: \"35vh\", width: \"100%\", border: \"0px solid black\", overflow: \"auto\" }}>\n\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Hedef Türü\"\n                            value={objTypeInput}\n                            //defaultValue=\"select\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            select\n                            onChange={handleObjTypeInput}\n                            style={{ width: \"40%\" }}\n                        >\n                            <MenuItem value=\"\" >\n                                <em>None</em>\n                            </MenuItem>\n                            {/* <MenuItem key=\"type\" value={typeEnum}>\n                                {typeEnum}\n                            </MenuItem> */}\n                            {Object.keys(typeEnum).map((item, index) =>\n                                <MenuItem key={\"type\" + index} value={typeEnum[item]}>\n                                    {typeEnum[item]}\n                                </MenuItem>\n                            )}\n                        </TextField>\n\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Hedef Çeşidi\"\n                            value={objKindInput}\n                            //defaultValue=\"select\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            select\n                            onChange={handleObjKindInput}\n                            style={{ width: \"40%\" }}\n                        >\n                            <MenuItem value=\"\" >\n                                <em>None</em>\n                            </MenuItem>\n                            {/* <MenuItem key=\"kind\" value={kindEnum}>\n                                {kindEnum}\n                            </MenuItem> */}\n                            {Object.keys(kindEnum).map((item, index) =>\n                                <MenuItem key={\"kind\" + index} value={kindEnum[item]}>\n                                    {kindEnum[item]}\n                                </MenuItem>\n                            )}\n                        </TextField>\n\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Dönem\"\n                            value={periodInput}\n                            //defaultValue=\"select\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            select\n                            onChange={handlePeriodInput}\n                            style={{ width: \"40%\" }}\n                        >\n                            <MenuItem value=\"\" >\n                                <em>None</em>\n                            </MenuItem>\n                            {/* <MenuItem key=\"period\" value={periodEnum}>\n                                {periodEnum}\n                            </MenuItem> */}\n                            {Object.keys(periodEnum).map((item, index) =>\n                                <MenuItem key={\"period\" + index} value={periodEnum[item]}>\n                                    {periodEnum[item]}\n                                </MenuItem>\n                            )}\n                        </TextField>\n\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Birim\"\n                            //defaultValue=\"select\"\n                            value={unitInput}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            select\n                            onChange={handleUnitInput}\n                            style={{ width: \"40%\" }}\n                        >\n                            <MenuItem value=\"\" >\n                                <em>None</em>\n                            </MenuItem>\n                            {/* <MenuItem key=\"unit\" value={unitEnum}>\n                                {unitEnum}\n                            </MenuItem> */}\n                            {Object.keys(unitEnum).map((item, index) =>\n                                <MenuItem key={\"unit\" + index} value={unitEnum[item]}>\n                                    {unitEnum[item]}\n                                </MenuItem>\n                            )}\n                        </TextField>\n\n                        <TextField\n                            label=\"Ağırlık\"\n                            id=\"outlined-start-adornment\"\n                            //className={clsx(classes.margin, classes.textField)}\n                            /* InputProps={{\n                                startAdornment: <InputAdornment marginDense position=\"start\">%</InputAdornment>,\n                            }} */\n                            variant=\"outlined\"\n                            type=\"number\"\n                            size=\"small\"\n                            value={creditInput}\n                            onChange={handleCreditInput}\n                            style={{ width: \"40%\" }}\n                        />\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Hedef Değer\"\n                            value={targetInput}\n                            onChange={handleTargetInput}\n                            //defaultValue=\"\"\n                            type=\"number\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ width: \"40%\" }}\n                        />\n\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Alt Limit\"\n                            value={minInput}\n                            onChange={handleMinInput}\n                            //defaultValue=\"\"\n                            type=\"number\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ width: \"40%\" }}\n                        />\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Üst Limit\"\n                            value={maxInput}\n                            onChange={handleMaxInput}\n                            //defaultValue=\"\"\n                            type=\"number\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ width: \"40%\", border: \"0px solid black\" }}\n                        />\n\n                    </Grid>\n\n                    <Grid style={{ height: \"35vh\", width: \"100%\", backgroundColor: \"#e0e0e0\", border: \"0px solid black\", overflow: \"auto\" }}>\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Açıklama\"\n                            onChange={handleDescriptionChange}\n                            value={descriptionInput}\n                            //defaultValue=\"\"\n                            variant=\"filled\"\n                            multiline\n                            rows=\"12\"\n                            //style={{ height: \"100%\", width:\"90%\" }}\n                            style={{ width: \"80%\", height: \"\", border: \"0px solid black\" }}\n                            margin=\"normal\"\n                        //size=\"medium\"\n                        //rowsMax=\"10\"\n\n                        ></TextField>\n                    </Grid>\n                    {/* </Grid> */}\n\n                    <Grid container item xs={12} direction=\"column\" style={{ minHeight: \"\", width: \"\" }}>\n\n                        <div className={classes.root1} style={{ height: \"\", backgroundColor: \"\" }}>\n                            <ButtonGroup variant=\"text\" size=\"large\" color=\"primary\" aria-label=\"text primary button group\">\n                                <Button\n                                    startIcon={<SaveIcon />}\n                                    onClick={handleUpdateObjButton}\n                                    className={classes.editButtons}\n                                >\n                                    Kaydet\n                                </Button>\n                                <Button\n                                    startIcon={<ClearIcon />}\n                                    className={classes.editButtons}>\n                                    İptal\n                                        </Button>\n                            </ButtonGroup>\n                        </div>\n                    </Grid>\n                </Grid>\n\n\n            </FormControl>\n\n        </Paper>\n    )\n}","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Slide, Paper, ButtonGroup } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport SetObjectivesAddObjForm from \"./setObjectivesAddObjForm\"\nimport SetObjectivesSelectEmployee from \"./setObjectivesSelectEmployee\"\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function AlertDialogSlide(props) {\n\n    console.log(\"isOpen on dialog:::: \", props.open)\n\n    const handleClickOpen = () => {\n        //setOpen(true);\n    };\n\n    const handleClose = (evet, reason) => {\n        if(reason === 'backdropClick'){\n            return;\n        }\n        props.handleCloseDialog()\n    };\n\n    var newObjective = \"\"\n    const initNewObjective = (i) => {\n        console.log(\"initNewObjective: \", i)\n        newObjective = i\n    }\n\n    const handleSaveObjectiveButton = () => {\n        props.saveObjective(newObjective)\n    }\n\n    return (\n        <div style={{ width: \"\" }}>\n            <Dialog\n                open={props.open}\n                //TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n                maxWidth=\"lg\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\" style={{backgroundColor: \"#b71c1c\", color:\"white\", height: \"\"}}>{\"Hedef Ekleme\"}</DialogTitle>\n                <DialogContent style={{ height: \"\" }}>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                    \n                    {props.employee === \"\" & !props.isUserAsEmployee ? <h5>Hedef girilecek Personel Seçin!</h5>\n                    :\n                    props.employee.name + \" \" + props.employee.surname\n                    }\n                        \n                    </DialogContentText>\n\n                    <SetObjectivesAddObjForm employee={props.employee} saveObjective={props.saveObjective} initNewObjective={initNewObjective} />\n\n\n                </DialogContent>\n\n                <DialogActions>\n\n                    <ButtonGroup variant=\"text\" size=\"large\" color=\"primary\" aria-label=\"text primary button group\">\n                        <Button\n                            startIcon={<SaveIcon />}\n                            style={{ color: \"grey\" }}\n                            onClick={handleSaveObjectiveButton}\n                        >\n                            Kaydet\n                                </Button>\n                        <Button\n                            startIcon={<ClearIcon />}\n                            style={{ color: \"grey\" }}\n                            onClick={handleClose}>\n                            İptal\n                                        </Button>\n                        {/* <Button>Three</Button> */}\n                    </ButtonGroup>\n\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nexport default function CustomizedSnackbars(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(props.open);\n\n    const handleClick = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (event, reason) => {        \n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    console.log(\"SNACKBARDASINNN: \", props.open, props.type, props.message)\n\n    return (\n        <div className={classes.root}>\n            {/* <Button variant=\"outlined\" onClick={handleClick}>\n        Open success snackbar\n      </Button> */}\n            <Snackbar\n                open={open}\n                autoHideDuration={4000}\n                onClose={handleClose}\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                onExit={props.onExitFromSnackbar}\n                transitionDuration={1000}\n            >\n                <Alert\n                    onClose={handleClose}\n                    severity={props.type}\n                    variant=\"filled\"\n                >\n                    {props.message}\n                </Alert>\n            </Snackbar>\n            {/* <Alert severity=\"error\">This is an error message!</Alert>\n      <Alert severity=\"warning\">This is a warning message!</Alert>\n      <Alert severity=\"info\">This is an information message!</Alert>\n      <Alert severity=\"success\">This is a success message!</Alert> */}\n        </div>\n    );\n}\n","import React, { useEffect } from 'react'\nimport { Grid, Paper, IconButton, Box, Divider, Button, Menu, TextField, Typography } from '@material-ui/core'\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport DoneIcon from '@material-ui/icons/Done';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport DragIndicatorRoundedIcon from '@material-ui/icons/DragIndicatorRounded';\nimport MoreVertRoundedIcon from '@material-ui/icons/MoreVertRounded';\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport AddIcon from '@material-ui/icons/Add';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport SubdirectoryArrowLeftIcon from '@material-ui/icons/SubdirectoryArrowLeft';\nimport Fab from '@material-ui/core/Fab';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport BuildIcon from '@material-ui/icons/Build';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport NavigationIcon from '@material-ui/icons/Navigation';\n\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport PrintIcon from '@material-ui/icons/Print';\nimport ShareIcon from '@material-ui/icons/Share';\n\nimport SetObjectivesTable from \"./setObjectivesTable\"\nimport SetObjectivesSelectEmployee from \"./setObjectivesSelectEmployee\"\nimport SetObjectivesAddForm from \"./setObjectivesAddObjForm\"\nimport SetObjectivesEditForm from \"./setObjectivesEditObjForm\"\nimport SetObjectivesAddObjDialog from \"./setObjectivesAddObjDialog\"\nimport SnackBars from \"./snackbar.js\"\n\nimport mdata from \"../common/mockdata\"\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'grid',\n        //width: '100%',\n        //height: '100%',\n    },\n    formControl: {\n        //margin: theme.spacing(2),\n        margin: \"1% 1% 1% 1%\",\n        //minWidth: 120,\n        width: \"15%\",\n        float: \"left\",\n        //marginLeft: \"20%\"\n    },\n\n    /* select: {\n        borderColor: \"red\",\n        '&:before': {\n            borderColor: \"red\",\n        },\n        '&:after': {\n            borderColor: \"black\",\n        }\n    }, */\n    icon: {\n        color: \"#b71c1c\",\n    },\n\n    speedDial: {\n        position: 'relative',\n        '&.MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft': {\n            bottom: theme.spacing(1),\n            right: theme.spacing(1),\n            top: theme.spacing(1),\n        },\n        '&.MuiSpeedDial-directionDown, &.MuiSpeedDial-directionRight': {\n            //top: theme.spacing(2),\n            //left: theme.spacing(2),\n        },\n    },\n\n}));\n\nconst CssTextField = withStyles({\n    root: {\n        '& label.Mui-focused': {\n            color: 'black',\n        },\n        '& label': {\n            color: '#b71c1c',\n        },\n        '& .MuiInput-underline:after': {\n            //borderBottomColor: '#b71c1c',\n            //borderColor: 'black',\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n                borderColor: 'black',\n                //border: \"1px solid\",\n            },\n            '&:hover fieldset': {\n                backgroundColor: \"\",\n                //borderColor: 'black',\n                //border: \"1px solid\"\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: '#b71c1c',\n                border: \"2px solid\",\n            },\n        },\n        icon: {\n            color: \"red\",\n        }\n    },\n})(TextField);\n\nconst StyledSpeedDial = withStyles({\n    root: {\n        '& .MuiFab-secondary': {\n            color: 'white',\n            backgroundColor: \"#b71c1c\"\n        },\n    }\n})(SpeedDial);\n\nconst actionsOfSpeedDial = [\n    { icon: <SupervisedUserCircleIcon />, name: 'Personel Hedefleri' },\n    { icon: <AccountCircleIcon />, name: 'Kendi Hedeflerim' },\n    { icon: <AddIcon />, name: 'Hedef Ekle' },\n];\n\nexport default function SetObjectivesContainer(props) {\n    const classes = useStyles()\n\n    const [selectedEmployee, setSelectedEmployee] = React.useState('');\n    const [selectedObjectiveYear, setSelectedObjectiveYear] = React.useState('')\n    const [employee, setEmployee] = React.useState('')\n\n    const [isUserAsEmployee, setIsUserAsEmployee] = React.useState('')\n\n    const [isEditObjectiveOpen, setIsEditObjectiveOpen] = React.useState(false)\n    const [isAddObjectiveOpen, setIsAddObjectiveOpen] = React.useState(false)\n\n    const [selectedObjective, setSelectedObjective] = React.useState({ index: \"\", objective: {} })\n\n    const [snackBarState, setSnackBarState] = React.useState({ open: false, type: \"\", message: \"\" })\n\n\n    const [direction, setDirection] = React.useState('left');\n    const [open, setOpen] = React.useState(false);\n    const [hidden, setHidden] = React.useState(false);\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleSpeedDialActionClick = (actionType) => {\n        console.log(\"event.target.value: \", actionType)\n        if (actionType === \"Hedef Ekle\") {\n            handleClose()\n            handleObjectiveAddButton()\n        } else if (actionType === \"Kendi Hedeflerim\") {\n            setEmployee(props.user)\n            setIsUserAsEmployee(true)\n            console.log(\"kendi hedeflerim\")\n        } else if (actionType === \"Personel Hedefleri\") {\n            setIsUserAsEmployee(false)\n            setSelectedEmployee(\"\")\n            setSelectedObjectiveYear(\"\")\n            setEmployee(\"\")\n        }\n    }\n\n    const handleClickOpenDialog = () => {\n        setIsAddObjectiveOpen(true);\n    };\n\n    const handleCloseDialog = () => {\n        setIsAddObjectiveOpen(false);\n    };\n\n    const handleSelectEmployee = (event) => {\n        console.log(\"event.target.value from handle select employee: \", event.target.value)\n        setSelectedEmployee(event.target.value);\n        if (event.target.value !== \"\" & event.target.value !== undefined) {\n            getEmployeeInfo(event.target.value.id);\n            if (selectedObjectiveYear === \"\") {\n                setSnackBarState({ open: true, type: \"warning\", message: \"Hedef yılı seçin\" })\n            }\n        } else {\n            setEmployee('')\n            setSelectedObjectiveYear('')\n            setIsEditObjectiveOpen(false)\n        }\n    };\n\n    const handleSelectObjectiveYear = (event) => {\n        setSelectedObjectiveYear(event.target.value)\n    }\n\n    const handleSelectObjective = (index, operationType) => {\n        //console.log(\"event.target.value from tablodan objective\", index, employee.objectives[0].objectiveList[index])\n        if (operationType === \"edit\") {\n            setSelectedObjective({ index: index, objective: employee.objectives[0].objectiveList[index] })\n            setIsEditObjectiveOpen(true)\n        } else if (operationType === \"delete\") {\n            //console.log(\"objective silinecek: \", employee.objectives[0].objectiveList[index])\n            deleteObjective(index)\n        }\n    }\n\n    const handleObjectiveAddButton = () => {\n        if (employee !== \"\") {\n            handleClickOpenDialog()\n            //setIsAddObjectiveOpen(!isAddObjectiveOpen)\n            setIsEditObjectiveOpen(false)\n        } else {\n            console.log(\"EMPLOYEE SEÇMEDİN!\")\n            setSnackBarState({ open: true, type: \"error\", message: \"Personel seçmeniz gerekmektedir!\" })\n        }\n    }\n\n    const handleCloseEditButton = () => {\n        setIsEditObjectiveOpen(false)\n        setSelectedObjective(\"\")\n    }\n\n    //Rest Requests\n    /* const getEmployeeInfo = (id) => {\n        if (id === undefined) {\n            return\n        }\n        axios.get(`http://172.25.10.12:8081/user/findUserById?userID=` + id)\n            .then(res => {\n                if (res.status === 200) {\n                    console.log(\"res.data on getEmployeeInfo: \", res.data)\n                    setEmployee(res.data)\n                }\n            })\n    } */\n\n    const getEmployeeInfo = (id) => {\n        if (id === undefined) {\n            return\n        }\n        mdata.map((item, index) => {\n            if (item.id === id) {\n                setEmployee(item)\n            }\n        })\n\n    }\n\n    /* const saveObjective = (newObjective) => {\n        console.log(\"newObjective: \", newObjective)\n        axios.post(`http://172.25.10.12:8081/user/saveObjectiveItem`, {\n            employeeID: employee.id,\n            year: newObjective.year,\n            objectiveList: [{\n                creatorID: newObjective.creatorID,\n                objectiveType: newObjective.objectiveType,\n                objectiveKind: newObjective.objectiveKind,\n                description: newObjective.description,\n                period: newObjective.period,\n                credit: newObjective.credit,\n                target: newObjective.target,\n                unit: newObjective.unit,\n                lowerLimit: newObjective.lowerLimit,\n                upperLimit: newObjective.upperLimit\n            }]\n        })\n            .then(res => {\n                if (res.status === 200) {\n                    console.log(\"res.data from add objective\", res.data)\n                    setEmployee(res.data)\n                    handleCloseDialog()\n                    setSnackBarState({ open: true, type: \"success\", message: \"Hedef ekleme işlemi başarılı\" })\n                }\n            })\n            .catch((error) => {\n                console.log(\"Mesaj şu: \", error.message);\n                setSnackBarState({ open: true, type: \"error\", message: \"Hedef ekleme işlemi başarısız! Lütfen tüm alanların doldurulduğundan emin olun\" })\n            })\n\n    } */\n\n    const saveObjective = (newObjective) => {\n        mdata.filter(j => j.id === employee.id)[0].objectives[0].objectiveList.push(newObjective)\n\n        mdata.map((item, index) => {\n            if (item.id === employee.id) {\n                setEmployee(item)\n            }\n        })\n\n        handleCloseDialog()\n        setSnackBarState({ open: true, type: \"success\", message: \"Hedef ekleme işlemi başarılı\" })\n\n\n        /* .catch((error) => {\n            console.log(\"Mesaj şu: \", error.message);\n            setSnackBarState({ open: true, type: \"error\", message: \"Hedef ekleme işlemi başarısız! Lütfen tüm alanların doldurulduğundan emin olun\" })\n        }) */\n\n    }\n\n\n    /* const updateObjective = (updatedObjective) => {\n        axios.post(`http://172.25.10.12:8081/user/updateObjectiveItem?userID=` + employee.id + `&objectiveYear=` + selectedObjectiveYear + `&objectiveIndex=` + selectedObjective.index, {\n\n            objectiveType: updatedObjective.objectiveType,\n            objectiveKind: updatedObjective.objectiveKind,\n            description: updatedObjective.description,\n            period: updatedObjective.period,\n            credit: updatedObjective.credit,\n            unit: updatedObjective.unit,\n            target: updatedObjective.target,\n            lowerLimit: updatedObjective.lowerLimit,\n            upperLimit: updatedObjective.upperLimit\n\n        })\n            .then(res => {\n                if (res.status === 200) {\n                    console.log(\"res.data on updateObjective\", res.data)\n                    setEmployee(res.data)\n                    setSnackBarState({ open: true, type: \"success\", message: \"Hedef güncelleme işlemi başarılı\" })\n                }\n            })\n    } */\n\n    //Buggy\n    const updateObjective = (updatedObjective) => {\n\n        mdata.filter(j => j.id === employee.id)[0].objectives[0].objectiveList.map((item, index) => {\n            if (selectedObjective.index === index) {\n                item.objectiveType = updatedObjective.objectiveType\n                item.description = updatedObjective.description\n\n                item.objectiveType = updatedObjective.objectiveType\n                item.objectiveKind = updatedObjective.objectiveKind\n                item.description = updatedObjective.description\n                item.period = updatedObjective.period\n                item.credit = updatedObjective.credit\n                item.unit = updatedObjective.unit\n                item.target = updatedObjective.target\n                item.lowerLimit = updatedObjective.lowerLimit\n                item.upperLimit = updatedObjective.upperLimit\n            }\n        })\n\n        /* mdata.map((item, index) => {\n            if (item.id === employee.id) {\n                setEmployee(item)\n            }\n        }) */\n\n        setSnackBarState({ open: true, type: \"success\", message: \"Hedef güncelleme işlemi başarılı\" })\n\n        /* axios.post(`http://172.25.10.12:8081/user/updateObjectiveItem?userID=` + employee.id + `&objectiveYear=` + selectedObjectiveYear + `&objectiveIndex=` + selectedObjective.index, {\n\n            objectiveType: updatedObjective.objectiveType,\n            objectiveKind: updatedObjective.objectiveKind,\n            description: updatedObjective.description,\n            period: updatedObjective.period,\n            credit: updatedObjective.credit,\n            unit: updatedObjective.unit,\n            target: updatedObjective.target,\n            lowerLimit: updatedObjective.lowerLimit,\n            upperLimit: updatedObjective.upperLimit\n\n        })\n            .then(res => {\n                if (res.status === 200) {\n                    console.log(\"res.data on updateObjective\", res.data)\n                    setEmployee(res.data)\n                    setSnackBarState({ open: true, type: \"success\", message: \"Hedef güncelleme işlemi başarılı\" })\n                }\n            }) */\n    }\n\n    /* const deleteObjective = (index) => {\n        axios.get(`http://172.25.10.12:8081/user/deleteObjectiveItem?userID=` + employee.id + `&objectiveYear=` + 2020 + `&objectiveIndex=` + index)\n            .then(res => {\n                if (res.status === 200) {\n                    console.log(\"res.data on delete objective\", res.data)\n                    getEmployeeInfo(employee.id)\n                    setSelectedObjective(\"\")\n                    setIsEditObjectiveOpen(false)\n                    setSnackBarState({ open: true, type: \"success\", message: \"Hedef silme işlemi başarılı\" })\n                }\n            })\n    } */\n\n    const deleteObjective = (index) => {\n        mdata.filter(j => j.id === employee.id)[0].objectives[0].objectiveList.pop(index)\n\n        getEmployeeInfo(employee.id)\n        setSelectedObjective(\"\")\n        setIsEditObjectiveOpen(false)\n        setSnackBarState({ open: true, type: \"success\", message: \"Hedef silme işlemi başarılı\" })\n\n    }\n\n    const renderYearForm = (\n        <FormControl\n            fullWidth\n            size=\"medium\"\n            //variant=\"outlined\"\n            className={classes.formControl}\n        >\n            {/* <InputLabel variant=\"default\" margin=\"dense\" id=\"demo-simple-select-helper-label\">Hedef Yılı Seçin</InputLabel> */}\n\n            {/* <TextField\n                disabled={selectedEmployee === \"\" ? true : false }\n                required\n                id=\"outlined-required\"\n                label=\"Yıl Seç\"\n                //defaultValue=\"select\"\n                value={selectedObjectiveYear}\n                variant={selectedEmployee === \"\" ? \"outlined\" : \"outlined\" }\n                size=\"small\"\n                select\n                onChange={handleSelectObjectiveYear}\n\n                className={classes.select}\n                inputProps={{\n                    classes: {\n                        icon: classes.icon,\n                    },\n                }}\n            >\n                <MenuItem dense value=\"\">\n                    <em>None</em>\n                </MenuItem>\n                {employee !== null & employee !== \"\" ?\n                    employee.objectives.map((item, index) =>\n                        <MenuItem dense value={item.year} key={index}>{item.year}</MenuItem>\n                    )\n                    : \"\"}\n            </TextField> */}\n\n            <CssTextField\n                disabled={selectedEmployee === \"\" & !isUserAsEmployee ? true : false}\n                required\n                id=\"outlined-required\"\n                label=\"Yıl Seç\"\n                //defaultValue=\"select\"\n                value={selectedObjectiveYear}\n                variant={selectedEmployee === \"\" ? \"outlined\" : \"outlined\"}\n                size=\"small\"\n                select\n                onChange={handleSelectObjectiveYear}\n\n                className={classes.select}\n                inputProps={{\n                    classes: {\n                        icon: classes.icon,\n                    },\n                }}\n            >\n                <MenuItem dense value=\"\">\n                    <em>None</em>\n                </MenuItem>\n                {employee !== null & employee !== \"\" ?\n                    employee.objectives.map((item, index) =>\n                        <MenuItem dense value={item.year} key={index}>{item.year}</MenuItem>\n                    )\n                    : \"\"}\n            ></CssTextField>\n\n            {/* {selectedObjectiveYear === \"\" ? <FormHelperText>Hedef yılı seçin</FormHelperText> : \"\"} */}\n        </FormControl>\n    )\n\n    const employeeWithObjYear = { employee: employee, year: selectedObjectiveYear }\n\n    const onExitFromSnackbar = () => {\n        setSnackBarState({ open: false })\n    }\n\n    return (\n        <Grid container item xs={12} spacing={2} direction=\"row\" style={{ height: \"85vh\" }} className={classes.root}>\n            < SetObjectivesAddObjDialog open={isAddObjectiveOpen} handleCloseDialog={handleCloseDialog} employee={employee} saveObjective={saveObjective} isUserAsEmployee={isUserAsEmployee} />\n\n            {snackBarState.open ?\n                < SnackBars open={snackBarState.open} type={snackBarState.type} message={snackBarState.message} onExitFromSnackbar={onExitFromSnackbar} />\n                :\n                \"\"\n            }\n\n            <Grid container item xs={12} spacing={2} direction=\"row\">\n                <Grid container item xs={12} direction=\"column\" style={{ height: \"\", minHeight: \"\" }}>\n                    <Paper elevation={9} square={true} style={{ height: \"100%\", width: \"100%\", border: \"0px solid black\", margin: \"\" }}>\n                        {/* <div style={{ display: \"\", float: \"left\", marginTop: \"0%\" }}>\n                                    <IconButton aria-label=\"delete\" onClick={handleBackButton}>\n                                        <KeyboardBackspaceIcon fontSize=\"default\" color=\"primary\" style={{ color: \"#b71c1c\" }} />\n                                    </IconButton>\n                                </div> */}\n\n                        {/* <Paper style={{ backgroundColor: \"\", float: \"left\", margin: 6}}> */}\n                        {/* <Typography style={{ float: \"left\", margin: 15 }}>Hedef Düzenleme Ekranı</Typography> */}\n                        {/* </Paper> */}\n\n                        <div style={{ display: \"\", float: \"\", }}>\n                            {!isUserAsEmployee ?\n                                <SetObjectivesSelectEmployee handleSelectEmployee={handleSelectEmployee} selectedEmployee={selectedEmployee} user={props.user} />\n                                :\n                                \"\"\n                            }\n                        </div>\n\n                        <div style={{ display: \"\", float: \"\", width: \"\" }}>\n                            {renderYearForm}\n                        </div>\n\n                        {/* {!isAddObjectiveOpen ? */}\n                        <div style={{ display: \"\", float: \"right\", width: \"\", margin: \"0% 0% 1% 0%\" }}>\n                            {/* <Button\n                                            onClick={handleObjectiveAddButton}\n                                            startIcon={<AddCircleOutlineIcon fontSize=\"default\" style={{ color: \"#b71c1c\" }} />}\n                                            variant=\"outlined\"\n                                            //color=\"secondary\"\n                                            style={{ color: \"#b71c1c\", width: \"100%\"}}\n                                        >\n                                            Hedef Ekle\n                                        </Button> */}\n                            {/* <Fab color=\"primary\" aria-label=\"add\" size=\"small\" onClick={handleObjectiveAddButton} style={{ backgroundColor: \"#b71c1c\" }}>\n                                    <AddIcon />\n                                </Fab> */}\n\n                            <StyledSpeedDial\n                                ariaLabel=\"SpeedDial example\"\n                                className={classes.speedDial}\n                                hidden={hidden}\n                                icon={<SpeedDialIcon />}\n                                onClose={handleClose}\n                                onOpen={handleOpen}\n                                open={open}\n                                direction={direction}\n                                FabProps={{ size: \"small\", color: \"secondary\" }}\n\n\n                            >\n                                {actionsOfSpeedDial.map((action) => (\n                                    action.name === \"Kendi Hedeflerim\" & isUserAsEmployee ?\n                                        \"\"\n                                        : [action.name === \"Personel Hedefleri\" & !isUserAsEmployee ?\n                                            \"\"\n                                            :\n                                            <SpeedDialAction\n                                                key={action.name}\n                                                icon={action.icon}\n                                                tooltipTitle={action.name}\n                                                onClick={() => handleSpeedDialActionClick(action.name)}\n\n                                            />\n                                        ]\n                                ))}\n                            </StyledSpeedDial>\n\n                        </div>\n\n                    </Paper>\n                </Grid>\n\n                <Grid container item xs={isEditObjectiveOpen ? 6 : 12} direction=\"column\" style={{ height: \"\" }}>\n                    {/* <Paper elevation={9} square={true} style={{ height: \"100%\", width: \"100%\", border: \"0px solid black\", margin: \"0px\" }}> */}\n                    {/* {isAddObjectiveOpen ? */}\n                    {/* <SetObjectivesAddForm handleObjectiveAddButton={handleObjectiveAddButton} employee={employee} saveObjective={saveObjective} /> */}\n\n                    <SetObjectivesTable user={props.user} employeeWithObjYear={employeeWithObjYear} handleSelectObjective={handleSelectObjective} selectedIndex={selectedObjective.index} />\n                    {/* } */}\n                    {/* </Paper> */}\n                </Grid>\n                {isEditObjectiveOpen ?\n                    <Grid container item xs={6} direction=\"column\" style={{ height: \"\" }}>\n                        {/* <Paper elevation={9} style={{ height: \"100%\", width: \"100%\", border: \"0px solid black\", margin: \"0px\", backgroundColor: \"white\" }}> */}\n                        {/* <div style={{ display: \"\", float: \"left\", marginLeft: \"0%\", marginTop: 0, height: \"10%\" }}>\n                                        <IconButton aria-label=\"delete\" onClick={handleCloseEditButton}>\n                                            <ArrowForwardIosIcon fontSize=\"default\" color=\"primary\" style={{ color: \"#b71c1c\" }} />\n                                        </IconButton>\n                                    </div> */}\n                        {/* <div style={{ height: \"90%\" }}> */}\n                        <SetObjectivesEditForm employee={employee} selectedObjective={selectedObjective} updateObjective={updateObjective} handleCloseEditButton={handleCloseEditButton} />\n                        {/* </div> */}\n\n                        {/* </Paper> */}\n                    </Grid> : \"\"}\n            </Grid>\n        </Grid>\n    )\n}\n","import React from 'react'\nimport { Grid, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'grid',\n        //width: '100%',\n        //height: '100%',\n    },\n\n}));\n\nexport default function SetUsersContainer(props){\n    const classes = useStyles()\n\n    return (\n        <div>\n        <Grid container item xs={12} spacing={2} direction=\"row\" style={{ height: \"85vh\" }} className={classes.root}>\n\n            <Grid container item xs={12} spacing={2} direction=\"row\"> \n                <Grid container item xs={3} direction=\"column\">\n                    <Paper elevation={9} square={true} style={{ height: \"100%\", width: \"100%\", border: \"0px solid black\", margin: \"0px\" }}>\n                    <h1>Set Users Container</h1>\n                    </Paper>\n                </Grid>\n\n                <Grid container item xs={3} direction=\"column\">\n                    <Paper elevation={9} style={{ height: \"100%\", width: \"100%\", border: \"0px solid black\", margin: \"0px\" }}>\n                    <h1>Set Users Container</h1>\n                    </Paper>\n                </Grid>\n\n                <Grid container item xs={3} direction=\"column\">\n                    <Paper elevation={9} style={{ height: \"100%\", width: \"100%\", border: \"0px solid black\", margin: \"0px\" }}>\n                    <h1>Set Users Container</h1>\n                    </Paper>\n                </Grid>\n\n                <Grid container item xs={3} direction=\"column\">\n                    <Paper elevation={9} style={{ height: \"100%\", width: \"100%\", border: \"0px solid black\", margin: \"0px\" }}>\n                    <h1>Set Users Container</h1>\n                    </Paper>\n                </Grid>\n            </Grid>\n\n            <Grid container item xs={12} spacing={2} direction=\"row\">\n                <Grid container item xs={3} direction=\"column\">\n                    <Paper elevation={9} style={{ height: \"100%\", width: \"100%\", border: \"0px solid black\", margin: \"0px\" }}>\n                    <h1>Set Users Container</h1>\n                    </Paper>\n                </Grid>\n\n                <Grid container item xs={3} direction=\"column\">\n                    <Paper elevation={9} style={{ height: \"100%\", width: \"100%\", border: \"0px solid black\", margin: \"0px\" }}>\n                    <h1>Set Users Container</h1>\n                    </Paper>\n                </Grid>\n\n                <Grid container item xs={3} direction=\"column\">\n                    <Paper elevation={9} style={{ height: \"100%\", width: \"100%\", border: \"0px solid black\", margin: \"0px\" }}>\n                    <h1>Set Users Container</h1>\n                    </Paper>\n                </Grid>\n\n                <Grid container item xs={3} direction=\"column\">\n                    <Paper elevation={9} style={{ height: \"100%\", width: \"100%\", border: \"0px solid black\", margin: \"0px\" }}>\n                    <h1>Set Users Container</h1>\n                    </Paper>\n                </Grid>\n            </Grid>\n\n        </Grid>\n    </div >\n    )\n}\n","import React from 'react'\n\nexport default function ProfileContainer(props){\n    return <h1>Profile Container</h1>\n}\n\n","import React from 'react'\n\nexport default function UsersContainer(props){\n    return <h1>Users Container</h1>\n}\n","import React from 'react'\n\nexport default function SettingsContainer(props){\n    return <h1>Settings Container</h1>\n}\n","import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport clsx from 'clsx';\n\nconst drawerWidth = 180;\n//const drawerWidth = \"14vw\";\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  /* appbar: {\n    //zIndex: theme.zIndex.drawer + 1,\n    width: \"89%\",\n    height: \"8%\",\n    backgroundColor: \"#b71c1c\"\n  }, */\n  appbar: {\n    backgroundColor: \"#b71c1c\",\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    //display: \"flex\",\n    //flexGrow: 1,\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.05),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    //width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(5),\n      //left: '55%',\n      //marginRight: '45%',\n      //width: '30%',\n      \n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function Toolbar1(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = event => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      {/* <MenuItem onClick={handleMenuClose}>Profil</MenuItem>\n      <MenuItem onClick={handleMenuClose}>Hesabım</MenuItem> */}\n      <MenuItem onClick={handleMenuClose}>{props.user.name + \" \" + props.user.surname}</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      \n        <Toolbar>\n\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={props.handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              //[classes.hide]: props.open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Performans Yönetim Sistemi\n          </Typography>\n         \n          {/* <div className={classes.search} >\n            <div className={classes.searchIcon} >\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div> */}\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={1} color=\"primary\">\n                <MailIcon />\n              </Badge>\n            </IconButton> */}\n            {/* <IconButton aria-label=\"show 17 new notifications\" style={{ color: \"black\" }}>\n              <Badge badgeContent={1} color=\"primary\" style={{ color: \"black\" }}>\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n              style={{ color: \"black\" }}\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { ListItem, Paper } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport FlightTakeoffIcon from '@material-ui/icons/FlightTakeoff';\nimport GroupIcon from '@material-ui/icons/Group';\nimport PersonIcon from '@material-ui/icons/Person';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport PowerOffIcon from '@material-ui/icons/PowerOff';\nimport PlusOneIcon from '@material-ui/icons/PlusOne';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport AddCommentIcon from '@material-ui/icons/AddComment';\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\nimport QueueIcon from '@material-ui/icons/Queue';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nimport Bar from \"./appbar\"\nimport Dashboard from \"../dashboard/dashboard\"\nimport VoteContainer from \"../voteObjectives/voteContainer\"\nimport WatchContainer from \"../watchObjectives/watchContainer\"\nimport SetObjectivesContainer from \"../setObjectives/setObjectivesContainer\"\nimport SetUsersContainer from \"../setUsers/setUsersContainer\"\nimport ProfileContainer from \"../profile/profileContainer\"\nimport UsersContainer from \"../users/usersContainer\"\nimport SettingsContainer from \"../settings/settingsContainer\"\n\nimport Toolbar1 from \"./toolbar\"\n\nimport logo from '../../logo-tr.png';\nimport '../../App.css';\n\nconst drawerWidth = 180;\n//const drawerWidth = \"14vw\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n\n    appBar: {\n        backgroundColor: \"#b71c1c\",\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n        //borderRight: \"2px solid #b71c1c\"\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        borderRight: \"2px solid #b71c1c\"\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n        borderRight: \"2px solid #b71c1c\"\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    papers: {\n        //backgroundColor: \"#eceff1\",\n        backgroundColor: \"#e0e0e0\",\n        marginBottom: 0\n    },\n    selected: {\n        color: \"#b71c1c\"\n    },\n    notSelected: {\n        /* \"&.Mui-selected\": {\n            backgroundColor: \"red\"\n        }, */\n        color: \"black\"\n    }\n}));\n\nexport default function MiniDrawer(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(!open);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    //dashboard\n    const [isOpenDashboard, setIsOpenDashboard] = React.useState(true)\n\n    //vote\n    const [isOpenVoteObjectives, setIsOpenVoteObjectives] = React.useState(false)\n    const [isOpenWatchObjectives, setIsOpenWatchObjectives] = React.useState(false)\n\n    //edit\n    const [isOpenSetObjectives, setIsOpenSetObjectives] = React.useState(false)\n    const [isOpenSetUsers, setIsOpenSetUsers] = React.useState(false)\n\n    //users\n    const [isOpenProfile, setIsOpenProfile] = React.useState(false)\n    const [isOpenUsers, setIsOpenUsers] = React.useState(false)\n\n    //settings\n    const [isOpenSettings, setIsOpenSettings] = React.useState(false)\n\n    //view state\n    const [prevView, setPrevView] = React.useState([setIsOpenDashboard])\n\n    const handleView = (newView) => {\n        prevView[0](false)\n        newView(true)\n        setPrevView([newView])\n    }\n\n    const renderDashboard = () => {\n        if (isOpenDashboard) {\n            return <Dashboard />\n        }\n    }\n\n    const renderVoteObjectives = () => {\n        if (isOpenVoteObjectives) {\n            return <VoteContainer user={props.user} />\n        }\n    }\n\n    const renderWatchObjectives = () => {\n        if (isOpenWatchObjectives) {\n            return <WatchContainer user={props.user} />\n        }\n\n    }\n\n    const renderSetObjectives = () => {\n        if (isOpenSetObjectives) {\n            return <SetObjectivesContainer user={props.user}/>\n        }\n    }\n\n    const renderSetUsers = () => {\n        if (isOpenSetUsers) {\n            return <SetUsersContainer />\n        }\n    }\n\n    const renderProfile = () => {\n        if (isOpenProfile) {\n            return <ProfileContainer />\n        }\n    }\n\n    const renderUsers = () => {\n        if (isOpenUsers) {\n            return <UsersContainer />\n        }\n    }\n\n    const renderSettings = () => {\n        if (isOpenSettings) {\n            return <SettingsContainer />\n\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            {/* <Bar handleDrawerOpen={handleDrawerOpen} open={open} /> */}\n\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                 <Toolbar1 handleDrawerOpen={handleDrawerOpen} open={open} user={props.user}/>\n            </AppBar>\n\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    }),\n                }}\n            >\n                \n                {open ?\n                    <Paper style={{ height: \"\", color: \"black\" }} className={classes.papers}>\n                        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                        {/* <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                    </IconButton>\n                </div> */}\n                    </Paper>\n                    :\n                    \"\"\n                }\n                {!open ? <div className={classes.toolbar}></div> : \"\"}\n                {open ? <Divider style={{ border: \"0px solid #b71c1c\" }} /> : \"\"}\n                <Paper className={classes.papers} >\n                    <List dense>\n                        <ListItem button selected={isOpenDashboard} key=\"Ana Sayfa\" onClick={() => handleView(setIsOpenDashboard)}>\n                            <ListItemIcon ><DashboardIcon className={isOpenDashboard ? classes.selected : classes.notSelected} fontSize=\"default\" /> </ListItemIcon>\n                            <ListItemText primary={<Typography variant=\"caption\">Ana Sayfa</Typography>} />\n                        </ListItem>\n                    </List>\n                </Paper>\n                <Divider style={{ border: \"0px solid #b71c1c\" }} />\n                <Paper className={classes.papers} >\n                    <List dense>\n                        <ListItem button selected={isOpenVoteObjectives} key=\"Hedefler\" onClick={() => handleView(setIsOpenVoteObjectives)} >\n                            <ListItemIcon ><ThumbUpAltIcon className={isOpenVoteObjectives ? classes.selected : classes.notSelected} fontSize={isOpenVoteObjectives ? \"default\" : \"default\"} /></ListItemIcon>\n                            <ListItemText primary={<Typography variant=\"caption\">Puan Ver</Typography>} />\n                        </ListItem>\n                    </List>\n                </Paper>\n                <Divider style={{ border: \"0px solid #b71c1c\" }} />\n                <Paper className={classes.papers} >\n                    <List dense>\n                        <ListItem button selected={isOpenWatchObjectives} key=\"İzle\" onClick={() => handleView(setIsOpenWatchObjectives)}>\n                            <ListItemIcon ><VisibilityIcon className={isOpenWatchObjectives ? classes.selected : classes.notSelected} fontSize={isOpenWatchObjectives ? \"default\" : \"default\"} /></ListItemIcon>\n                            <ListItemText primary={<Typography variant=\"caption\">İzle</Typography>} />\n                        </ListItem>\n                    </List>\n                </Paper>\n                <Divider style={{ border: \"0px solid #b71c1c\" }} />\n                <Paper className={classes.papers} >\n                    <List dense>\n                        <ListItem button selected={isOpenSetObjectives} key=\"İzle\" onClick={() => handleView(setIsOpenSetObjectives)}>\n                            <ListItemIcon ><AssignmentIcon className={isOpenSetObjectives ? classes.selected : classes.notSelected} fontSize=\"default\" /></ListItemIcon>\n                            <ListItemText primary={<Typography variant=\"caption\">Hedef Düzenle</Typography>} />\n                        </ListItem>\n\n                        {/* <ListItem button selected={isOpenSetUsers} key=\"Edit\" onClick={() => handleView(setIsOpenSetUsers)}>\n                            <ListItemIcon ><GroupAddIcon className={isOpenSetUsers ? classes.selected : classes.notSelected} fontSize=\"default\" /></ListItemIcon>\n                            <ListItemText primary={<Typography variant=\"caption\">Kullanıcı Düzenle</Typography>} />\n                        </ListItem> */}\n                    </List>\n                </Paper>\n                <Divider style={{ border: \"0px solid #b71c1c\" }} />\n                {/* <Paper className={classes.papers} >\n                    <List dense>\n                        <ListItem disabled button selected={isOpenProfile} key=\"profile\" onClick={() => handleView(setIsOpenProfile)}>\n                            <ListItemIcon><PersonIcon className={isOpenProfile ? classes.selected : classes.notSelected} fontSize=\"default\" /> </ListItemIcon>\n                            <ListItemText primary={<Typography variant=\"caption\">Profil</Typography>} />\n                        </ListItem>\n                        <ListItem disabled button selected={isOpenUsers} key=\"user\" onClick={() => handleView(setIsOpenUsers)}>\n                            <ListItemIcon><GroupIcon className={isOpenUsers ? classes.selected : classes.notSelected} fontSize=\"default\" /></ListItemIcon>\n                            <ListItemText primary={<Typography variant=\"caption\">Personel</Typography>} />\n                        </ListItem>\n\n                    </List>\n                </Paper> */}\n                <Divider style={{ border: \"0px solid #b71c1c\" }} />\n                <Paper className={classes.papers} style={{ marginBottom: 0 }}>\n                    <List dense>\n                        {/* <ListItem disabled button selected={isOpenSettings} key=\"Ayarlar\" onClick={() => handleView(setIsOpenSettings)}>\n                            <ListItemIcon><SettingsIcon className={isOpenSettings ? classes.selected : classes.notSelected} fontSize=\"default\" /> </ListItemIcon>\n                            <ListItemText primary={<Typography variant=\"caption\">Ayarlar</Typography>} />\n                        </ListItem> */}\n\n                        <ListItem button selected={false} onClick={props.handleLogout} >\n                            <ListItemIcon><PowerOffIcon className={false ? classes.selected : classes.notSelected} fontSize=\"default\" /></ListItemIcon>\n                            <ListItemText primary={<Typography variant=\"caption\">Çıkış Yap</Typography>} />\n                        </ListItem>\n\n                    </List>\n                </Paper>\n                <Divider style={{ border: \"0px solid #b71c1c\" }} />\n                <Paper style={{ height: \"100%\", marginBottom: 0 }} className={classes.papers}>\n                    {/* <ListItem button onClick={props.handleLogout} style={{}}>\n                        <ListItemIcon> <PowerOffIcon /></ListItemIcon >\n                        <ListItemText primary=\"Logout\" />\n                    </ListItem> */}\n                </Paper>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                {renderDashboard()}\n                {renderVoteObjectives()}\n                {renderWatchObjectives()}\n                {renderSetObjectives()}\n                {renderSetUsers()}\n                {renderProfile()}\n                {renderUsers()}\n                {renderSettings()}\n\n\n            </main>\n        </div>\n    );\n}\n","import React from 'react';\n//import logo from './logo-tr.png';\nimport './App.css';\n\nimport SignIn2 from \"./components/login/login2.js\"\nimport axios from 'axios';\n\nimport Drawer2 from \"./components/layout/drawer2\"\n\nfunction App() {\n\n  //localStorage.clear();\n  if (localStorage.getItem(\"myToken\") !== null & localStorage.getItem(\"myToken\") !== undefined) {\n    axios.defaults.headers.common[\"authorization\"] = \"Bearer \" + localStorage.getItem(\"myToken\")\n  }\n  const [user, setUser] = React.useState(JSON.parse(localStorage.getItem(\"fark\")));\n\n  const checkAutanticated = (userObj) => {\n    if (userObj !== null & userObj !== undefined) {\n      setUser(userObj)\n    }\n  }\n\n  console.log(\"user: \", user)\n\n  const handleLogout = () => {\n    console.log(\"handling logout\")\n    localStorage.clear();\n    setUser(null)\n  }\n\n  return (\n    <div className=\"App\">\n      {user === null ? <SignIn2 checkAutanticated={checkAutanticated} />\n        :\n        <Drawer2 user={user} handleLogout={handleLogout} />}\n      {/* <Drawer user={user} /> */}\n      {/* <SignIn2 checkAutanticated={checkAutanticated}/> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo-tr.63814e1d.png\";"],"sourceRoot":""}